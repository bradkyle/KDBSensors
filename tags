!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	Development	//
5009	clients/iqfeed/docker-iqfeed/app/proxy.js	/^	5009: 5010,$/;"	p	class:portMap
5009	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^	5009: 5010,$/;"	p	class:portMap
9100	clients/iqfeed/docker-iqfeed/app/proxy.js	/^	9100: 9101,$/;"	p	class:portMap
9100	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^	9100: 9101,$/;"	p	class:portMap
9200	clients/iqfeed/docker-iqfeed/app/proxy.js	/^	9200: 9201,$/;"	p	class:portMap
9200	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^	9200: 9201,$/;"	p	class:portMap
9300	clients/iqfeed/docker-iqfeed/app/proxy.js	/^	9300: 9301,$/;"	p	class:portMap
9300	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^	9300: 9301,$/;"	p	class:portMap
9400	clients/iqfeed/docker-iqfeed/app/proxy.js	/^	9400: 9401$/;"	p	class:portMap
9400	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^	9400: 9401$/;"	p	class:portMap
ACCOUNT_SUMMARY	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int ACCOUNT_SUMMARY           = 63;$/;"	v
ACCOUNT_SUMMARY_END	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int ACCOUNT_SUMMARY_END       = 64;$/;"	v
ACCT_DOWNLOAD_END	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int ACCT_DOWNLOAD_END         = 54;$/;"	v
ACCT_UPDATE_TIME	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int ACCT_UPDATE_TIME          = 8;$/;"	v
ACCT_VALUE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int ACCT_VALUE                = 6;$/;"	v
AIOKafkaConsumer	test/kafka/consumer.py	/^from aiokafka import AIOKafkaConsumer$/;"	i
AIOKafkaProducer	test/kafka/producer.py	/^from aiokafka import AIOKafkaProducer$/;"	i
ALIASES	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommonDefs.h	/^enum faDataType { GROUPS=1, PROFILES, ALIASES } ;$/;"	e	enum:faDataType
ASK	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^enum TickType { BID_SIZE, BID, ASK, ASK_SIZE, LAST, LAST_SIZE,$/;"	e	enum:TickType
ASK_EFP_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				ASK_EFP_COMPUTATION,$/;"	e	enum:TickType
ASK_EXCH	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				ASK_EXCH,$/;"	e	enum:TickType
ASK_OPTION_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				ASK_OPTION_COMPUTATION, $/;"	e	enum:TickType
ASK_SIZE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^enum TickType { BID_SIZE, BID, ASK, ASK_SIZE, LAST, LAST_SIZE,$/;"	e	enum:TickType
ASK_YIELD	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				ASK_YIELD,$/;"	e	enum:TickType
AUCTION_IMBALANCE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				AUCTION_IMBALANCE,$/;"	e	enum:TickType
AUCTION_IMPROVEMENT	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^                       AUCTION_IMPROVEMENT = 2,$/;"	e	enum:AuctionStrategy
AUCTION_MATCH	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^                       AUCTION_MATCH = 1,$/;"	e	enum:AuctionStrategy
AUCTION_PRICE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				AUCTION_PRICE,$/;"	e	enum:TickType
AUCTION_TRANSPARENT	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^                       AUCTION_TRANSPARENT = 3 };$/;"	e	enum:AuctionStrategy
AUCTION_UNSET	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^enum AuctionStrategy { AUCTION_UNSET = 0,$/;"	e	enum:AuctionStrategy
AUCTION_VOLUME	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				AUCTION_VOLUME,$/;"	e	enum:TickType
AVG_VOLUME	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				AVG_VOLUME,$/;"	e	enum:TickType
AddAgg	test/kafkpers/__init__.py	/^class AddAgg(self):$/;"	c
Any	notebooks/q/kxpy/kx_comm.py	/^from traitlets import Instance, Unicode, Bytes, Bool, Dict, Any, default$/;"	i
Atof	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/IBString.h	/^inline double Atof(IBString str)$/;"	f
Atoi	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/IBString.h	/^inline int Atoi(IBString str)$/;"	f
AuctionStrategy	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^enum AuctionStrategy { AUCTION_UNSET = 0,$/;"	g
BID	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^enum TickType { BID_SIZE, BID, ASK, ASK_SIZE, LAST, LAST_SIZE,$/;"	e	enum:TickType
BID_EFP_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				BID_EFP_COMPUTATION,$/;"	e	enum:TickType
BID_EXCH	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				BID_EXCH,$/;"	e	enum:TickType
BID_OPTION_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				BID_OPTION_COMPUTATION, $/;"	e	enum:TickType
BID_SIZE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^enum TickType { BID_SIZE, BID, ASK, ASK_SIZE, LAST, LAST_SIZE,$/;"	e	enum:TickType
BID_YIELD	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				BID_YIELD,$/;"	e	enum:TickType
BOND_CONTRACT_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int BOND_CONTRACT_DATA        = 18;$/;"	v
BarData	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^struct BarData {$/;"	s	namespace:__anon1
Bool	notebooks/q/kxpy/kx_comm.py	/^from traitlets import Instance, Unicode, Bytes, Bool, Dict, Any, default$/;"	i
BufferSizeHighMark	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^static const size_t BufferSizeHighMark = 1 * 1024 * 1024; \/\/ 1Mb$/;"	v
Bytes	notebooks/q/kxpy/kx_comm.py	/^from traitlets import Instance, Unicode, Bytes, Bool, Dict, Any, default$/;"	i
BytesVec	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	/^	typedef std::vector<char> BytesVec;$/;"	t	class:EClientSocketBase
C	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef char*S,C;typedef unsigned char G;typedef short H;typedef int I;typedef long long J;typedef float E;typedef double F;typedef void V;$/;"	t
CANCEL_ACCOUNT_SUMMARY	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_ACCOUNT_SUMMARY        = 63;$/;"	v
CANCEL_CALC_IMPLIED_VOLAT	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_CALC_IMPLIED_VOLAT     = 56;$/;"	v
CANCEL_CALC_OPTION_PRICE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_CALC_OPTION_PRICE      = 57;$/;"	v
CANCEL_FUNDAMENTAL_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_FUNDAMENTAL_DATA       = 53;$/;"	v
CANCEL_HISTORICAL_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_HISTORICAL_DATA        = 25;$/;"	v
CANCEL_MKT_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_MKT_DATA               = 2;$/;"	v
CANCEL_MKT_DEPTH	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_MKT_DEPTH              = 11;$/;"	v
CANCEL_NEWS_BULLETINS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_NEWS_BULLETINS         = 13;$/;"	v
CANCEL_ORDER	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_ORDER                  = 4;$/;"	v
CANCEL_POSITIONS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_POSITIONS              = 64;$/;"	v
CANCEL_REAL_TIME_BARS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_REAL_TIME_BARS         = 51;$/;"	v
CANCEL_SCANNER_SUBSCRIPTION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CANCEL_SCANNER_SUBSCRIPTION   = 23;$/;"	v
CD	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	102;"	d
CHSCROLLLISTBOX_H	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.h	5;"	d
CHScrollListBox	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	/^CHScrollListBox::CHScrollListBox()$/;"	f	class:CHScrollListBox
CHScrollListBox	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.h	/^class CHScrollListBox : public CListBox$/;"	c
CLIENT_VERSION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CLIENT_VERSION    = 63;$/;"	v
CLOSE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				HIGH, LOW, VOLUME, CLOSE,$/;"	e	enum:TickType
CLOSE_EFP_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				CLOSE_EFP_COMPUTATION,$/;"	e	enum:TickType
CLOSE_POS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^enum LegOpenClose { SAME_POS, OPEN_POS, CLOSE_POS, UNKNOWN_POS };$/;"	e	enum:LegOpenClose
COMMISSION_REPORT	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int COMMISSION_REPORT         = 59;$/;"	v
CONTRACT_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CONTRACT_DATA             = 10;$/;"	v
CONTRACT_DATA_END	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CONTRACT_DATA_END         = 52;$/;"	v
CS	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	101;"	d
CURRENT_TIME	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int CURRENT_TIME              = 49;$/;"	v
CUSTOMER	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^enum Origin { CUSTOMER,$/;"	e	enum:Origin
CUST_OPTION_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				CUST_OPTION_COMPUTATION,$/;"	e	enum:TickType
CheckOffset	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::CheckOffset(const char* ptr, const char* endPtr)$/;"	f	class:EClientSocketBase
CleanupBuffer	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::CleanupBuffer(BytesVec& buffer, int processed)$/;"	f	class:EClientSocketBase
CloneComboLegs	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^Contract::CloneComboLegs(ComboLegListSPtr& dst, const ComboLegListSPtr& src)$/;"	f	class:Contract
CloneOrderComboLegs	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^Order::CloneOrderComboLegs(OrderComboLegListSPtr& dst, const OrderComboLegListSPtr& src)$/;"	f	class:Order
CodeMsgPair	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TwsSocketClientErrors.h	/^	CodeMsgPair(int code, IBString msg) : m_errorCode(code), m_errorMsg(msg) {$/;"	f	class:CodeMsgPair
CodeMsgPair	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TwsSocketClientErrors.h	/^class CodeMsgPair {$/;"	c
ComboLeg	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	ComboLeg()$/;"	f	struct:ComboLeg
ComboLeg	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^struct ComboLeg$/;"	s
ComboLegList	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	typedef std::vector<ComboLegSPtr> ComboLegList;$/;"	t	struct:Contract
ComboLegListSPtr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	typedef shared_ptr<ComboLegList> ComboLegListSPtr;$/;"	t	struct:Contract
ComboLegSPtr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^typedef shared_ptr<ComboLeg> ComboLegSPtr;$/;"	t
Comm	notebooks/q/kxpy/kx_comm.py	/^class Comm(IPythonComm):$/;"	c
CommissionReport	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommissionReport.h	/^	CommissionReport()$/;"	f	struct:CommissionReport
CommissionReport	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommissionReport.h	/^struct CommissionReport$/;"	s
Compare	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/IBString.h	/^inline bool Compare(IBString str, IBString strToCompare)$/;"	f
Compare	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/IBString.h	/^inline bool Compare(IBString str, const char* strToCompare)$/;"	f
Config	clients/core.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Config	infra/monitoring/cluster.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Config	infra/monitoring/operator.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Config	infra/monitoring/thanos.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Config	test/kafkpers/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Config	test/kafktick/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Config	test/sensor/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Contract	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	Contract()$/;"	f	struct:Contract
Contract	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^struct Contract$/;"	s
ContractDetails	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	ContractDetails()$/;"	f	struct:ContractDetails
ContractDetails	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^struct ContractDetails$/;"	s
CustomFeedService	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^class CustomFeedService(iq.FeedService):$/;"	c
CustomVerboseIQFeedAdminListener	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^class CustomVerboseIQFeedAdminListener(CustomVerboseIQFeedListener):$/;"	c
CustomVerboseIQFeedListener	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^class CustomVerboseIQFeedListener(iq.VerboseIQFeedListener):$/;"	c
CustomVerboseIQFeedListener	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^class CustomVerboseIQFeedListener(iq.VerboseIQFeedListener):$/;"	c
DECODE_FIELD	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	256;"	d
DECODE_FIELD_MAX	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	257;"	d
DELTA_NEUTRAL_VALIDATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int DELTA_NEUTRAL_VALIDATION  = 56;$/;"	v
DISPLAY_GROUP_LIST	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int DISPLAY_GROUP_LIST        = 67;$/;"	v
DISPLAY_GROUP_UPDATED	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int DISPLAY_GROUP_UPDATED     = 68;$/;"	v
DLLEXP	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/StdAfx.h	5;"	d
DO	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	17;"	d
DO	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	21;"	d
DVCData	infra/dvc.py	/^class DVCData():$/;"	c
DVCFlow	infra/dvc.py	/^class DVCFlow():$/;"	c
DVCModel	infra/dvc.py	/^class DVCModel():$/;"	c
DecodeField	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::DecodeField(IBString& stringValue,$/;"	f	class:EClientSocketBase
DecodeField	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::DecodeField(bool& boolValue, const char*& ptr, const char* endPtr)$/;"	f	class:EClientSocketBase
DecodeField	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::DecodeField(double& doubleValue, const char*& ptr, const char* endPtr)$/;"	f	class:EClientSocketBase
DecodeField	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::DecodeField(int& intValue, const char*& ptr, const char* endPtr)$/;"	f	class:EClientSocketBase
DecodeField	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::DecodeField(long& longValue, const char*& ptr, const char* endPtr)$/;"	f	class:EClientSocketBase
DecodeFieldMax	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::DecodeFieldMax(double& doubleValue, const char*& ptr, const char* endPtr)$/;"	f	class:EClientSocketBase
DecodeFieldMax	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::DecodeFieldMax(int& intValue, const char*& ptr, const char* endPtr)$/;"	f	class:EClientSocketBase
DecodeFieldMax	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::DecodeFieldMax(long& longValue, const char*& ptr, const char* endPtr)$/;"	f	class:EClientSocketBase
Dict	notebooks/q/kxpy/kx_comm.py	/^from traitlets import Instance, Unicode, Bytes, Bool, Dict, Any, default$/;"	i
DisplayFormatter	notebooks/q/kxpy/kx_backend_inline.py	/^from IPython.core.formatters import DisplayFormatter $/;"	i
DockerBuild	clients/core.py	/^from pulumi_docker import Image, DockerBuild$/;"	i
DockerFileBuilder	infra/docker/docker.py	/^class DockerFileBuilder():$/;"	c
E	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef char*S,C;typedef unsigned char G;typedef short H;typedef int I;typedef long long J;typedef float E;typedef double F;typedef void V;$/;"	t
ECONNREFUSED	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocketPlatform.h	16;"	d
EClient	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClient.h	/^class EClient$/;"	c
EClientSocketBase	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	/^class EClientSocketBase : public EClient$/;"	c
EClientSocketBase	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^EClientSocketBase::EClientSocketBase( EWrapper *ptr)$/;"	f	class:EClientSocketBase
EISCONN	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocketPlatform.h	14;"	d
ENCODE_FIELD	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	259;"	d
ENCODE_FIELD_MAX	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	260;"	d
EPosixClientSocket	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^EPosixClientSocket::EPosixClientSocket( EWrapper *ptr) : EClientSocketBase( ptr)$/;"	f	class:EPosixClientSocket
EPosixClientSocket	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.h	/^class EPosixClientSocket : public EClientSocketBase$/;"	c
ERR_MSG	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int ERR_MSG                   = 4;$/;"	v
EWOULDBLOCK	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocketPlatform.h	15;"	d
EWrapper	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^class EWrapper$/;"	c
EXCHANGE_AVAIL_MSG	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int EXCHANGE_AVAIL_MSG    = 2;    \/\/ control message specifing that an exchange is available for trading$/;"	v
EXCHANGE_UNAVAIL_MSG	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int EXCHANGE_UNAVAIL_MSG  = 3;    \/\/ control message specifing that an exchange is unavailable for trading$/;"	v
EXECUTION_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int EXECUTION_DATA            = 11;$/;"	v
EXECUTION_DATA_END	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int EXECUTION_DATA_END        = 55;$/;"	v
EXERCISE_OPTIONS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int EXERCISE_OPTIONS              = 21;$/;"	v
Empty	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/IBString.h	/^inline void Empty(IBString& str)$/;"	f
EncodeField	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::EncodeField(std::ostream& os, T value)$/;"	f	class:EClientSocketBase
EncodeField	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::EncodeField<bool>(std::ostream& os, bool boolValue)$/;"	f	class:EClientSocketBase
EncodeField	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::EncodeField<double>(std::ostream& os, double doubleValue)$/;"	f	class:EClientSocketBase
EncodeFieldMax	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::EncodeFieldMax(std::ostream& os, double doubleValue)$/;"	f	class:EClientSocketBase
EncodeFieldMax	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::EncodeFieldMax(std::ostream& os, int intValue)$/;"	f	class:EClientSocketBase
Execution	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	Execution()$/;"	f	struct:Execution
Execution	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^struct Execution$/;"	s
ExecutionFilter	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	ExecutionFilter()$/;"	f	struct:ExecutionFilter
ExecutionFilter	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^struct ExecutionFilter$/;"	s
F	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef char*S,C;typedef unsigned char G;typedef short H;typedef int I;typedef long long J;typedef float E;typedef double F;typedef void V;$/;"	t
FIRM	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^              FIRM,$/;"	e	enum:Origin
FROZEN	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommonDefs.h	/^	FROZEN = 2$/;"	e	enum:MarketDataType
FUNDAMENTAL_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int FUNDAMENTAL_DATA          = 51;$/;"	v
FUNDAMENTAL_RATIOS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				FUNDAMENTAL_RATIOS,$/;"	e	enum:TickType
FigureCanvas	notebooks/q/kxpy/kx_backend_inline.py	/^FigureCanvas = FigureCanvasAgg$/;"	v
FigureCanvasAgg	notebooks/q/kxpy/kx_backend_inline.py	/^from matplotlib.backends.backend_agg import new_figure_manager, FigureCanvasAgg # analysis: ignore$/;"	i
FileBuilder	infra/filegen.py	/^class FileBuilder():$/;"	c
FindFieldEnd	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const char* EClientSocketBase::FindFieldEnd(const char* ptr, const char* endPtr)$/;"	f	class:EClientSocketBase
G	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef char*S,C;typedef unsigned char G;typedef short H;typedef int I;typedef long long J;typedef float E;typedef double F;typedef void V;$/;"	t
G0	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	struct:k0::__anon5::__anon6
G0	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	struct:k0::__anon2::__anon3
GROUPS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommonDefs.h	/^enum faDataType { GROUPS=1, PROFILES, ALIASES } ;$/;"	e	enum:faDataType
Gcf	notebooks/q/kxpy/kx_backend_inline.py	/^from matplotlib._pylab_helpers import Gcf$/;"	i
GetTextLen	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	/^int CHScrollListBox::GetTextLen(LPCTSTR lpszText)$/;"	f	class:CHScrollListBox
H	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef char*S,C;typedef unsigned char G;typedef short H;typedef int I;typedef long long J;typedef float E;typedef double F;typedef void V;$/;"	t
HALTED	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				HALTED,$/;"	e	enum:TickType
HELPERS_h	clients/ibroke/QInteractiveBrokers/src/helpers.h	2;"	d
HIGH	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				HIGH, LOW, VOLUME, CLOSE,$/;"	e	enum:TickType
HIGH_13_WEEK	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				HIGH_13_WEEK,$/;"	e	enum:TickType
HIGH_26_WEEK	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				HIGH_26_WEEK,$/;"	e	enum:TickType
HIGH_52_WEEK	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				HIGH_52_WEEK,$/;"	e	enum:TickType
HIGH_EFP_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				HIGH_EFP_COMPUTATION,$/;"	e	enum:TickType
HISTORICAL_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int HISTORICAL_DATA           = 17;$/;"	v
I	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef char*S,C;typedef unsigned char G;typedef short H;typedef int I;typedef long long J;typedef float E;typedef double F;typedef void V;$/;"	t
IBClient	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^IBClient::IBClient()$/;"	f	class:IBClient
IBClient	clients/ibroke/QInteractiveBrokers/src/IBClient.h	/^class IBClient : public EWrapper$/;"	c
IBClient_h	clients/ibroke/QInteractiveBrokers/src/IBClient.h	2;"	d
IBString	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/IBString.h	/^typedef CString IBString;$/;"	t
IBString	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/IBString.h	/^typedef std::string IBString;$/;"	t
INDEX_FUTURE_PREMIUM	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				INDEX_FUTURE_PREMIUM,$/;"	e	enum:TickType
IPython	notebooks/q/kxpy/kx_backend_inline.py	/^import IPython$/;"	i
IPython	notebooks/q/kxpy/kx_backend_inline.py	/^import IPython.core.display$/;"	i
IPython	notebooks/q/kxpy/kx_backend_inline.py	/^import IPython.display$/;"	i
IPythonComm	notebooks/q/kxpy/kx_comm.py	/^from ipykernel.comm import Comm as IPythonComm$/;"	i
IQ_FEED	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^    IQ_FEED = CustomFeedService(product=dtn_product_id,$/;"	v
Image	clients/core.py	/^from pulumi_docker import Image, DockerBuild$/;"	i
ImageBuilder	core/__init__.py	/^from infra.docker import ImageBuilder$/;"	i
ImageBuilder	infra/docker/docker.py	/^class ImageBuilder(DockerFileBuilder):$/;"	c
ImageBuilder	test/kafka/__init__.py	/^from infra.docker.docker import ImageBuilder$/;"	i
ImageBuilder	test/kafkpers/__init__.py	/^from infra.docker import ImageBuilder$/;"	i
ImageBuilder	test/kafktick/__init__.py	/^from infra.docker import ImageBuilder$/;"	i
ImageBuilder	test/sensor/__init__.py	/^from infra.docker import ImageBuilder$/;"	i
InlineBackend	notebooks/q/kxpy/kx_backend_inline.py	/^from ipykernel.pylab.config import InlineBackend$/;"	i
Instance	notebooks/q/kxpy/kx_comm.py	/^from traitlets import Instance, Unicode, Bytes, Bool, Dict, Any, default$/;"	i
IsEmpty	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/IBString.h	/^inline bool IsEmpty(const IBString& str)$/;"	f
J	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef char*S,C;typedef unsigned char G;typedef short H;typedef int I;typedef long long J;typedef float E;typedef double F;typedef void V;$/;"	t
K	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	t	typeref:struct:k0
K	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	t	typeref:struct:k0
K1	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	114;"	d
K2	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	115;"	d
KB	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	39;"	d
KC	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	47;"	d
KD	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	52;"	d
KDBAgent	core/__init__.py	/^class KDBAgent(pulumi.ComponentResource):$/;"	c
KDBFullSensor	clients/core.py	/^class KDBFullSensor(pulumi.ComponentResource):$/;"	c
KDBFullSensor	test/sensor/__init__.py	/^class KDBFullSensor(pulumi.ComponentResource):$/;"	c
KDBIngestCanary	__main__.py	/^from test.kafka import PYIngestCanary, KDBIngestCanary$/;"	i
KDBIngestCanary	test/kafka/__init__.py	/^class KDBIngestCanary(pulumi.ComponentResource):$/;"	c
KDBSensorRegistry	clients/register.py	/^class KDBSensorRegistry(pulumi.ComponentResource):$/;"	c
KDBSensorSpec	test/sensor/__init__.py	/^class KDBSensorSpec(object):$/;"	c
KE	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	45;"	d
KF	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	46;"	d
KG	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	41;"	d
KH	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	42;"	d
KI	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	43;"	d
KJ	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	44;"	d
KM	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	51;"	d
KN	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	54;"	d
KP	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	50;"	d
KS	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	48;"	d
KT	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	57;"	d
KU	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	55;"	d
KV	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	56;"	d
KX	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	2;"	d
KZ	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	59;"	d
KafkaTopic	infra/kafka.py	/^class KafkaTopic(pulumi.ComponentResource):$/;"	c
KxComm	notebooks/q/kxpy/kx_backend_inline.py	/^  from kxpy.kx_comm import Comm as KxComm$/;"	i
LAST	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^enum TickType { BID_SIZE, BID, ASK, ASK_SIZE, LAST, LAST_SIZE,$/;"	e	enum:TickType
LAST_EFP_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				LAST_EFP_COMPUTATION,$/;"	e	enum:TickType
LAST_OPTION_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				LAST_OPTION_COMPUTATION,$/;"	e	enum:TickType
LAST_RTH_TRADE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				LAST_RTH_TRADE,$/;"	e	enum:TickType
LAST_SIZE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^enum TickType { BID_SIZE, BID, ASK, ASK_SIZE, LAST, LAST_SIZE,$/;"	e	enum:TickType
LAST_TIMESTAMP	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				LAST_TIMESTAMP,$/;"	e	enum:TickType
LAST_YIELD	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				LAST_YIELD,$/;"	e	enum:TickType
LOW	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				HIGH, LOW, VOLUME, CLOSE,$/;"	e	enum:TickType
LOW_13_WEEK	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				LOW_13_WEEK,$/;"	e	enum:TickType
LOW_26_WEEK	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				LOW_26_WEEK,$/;"	e	enum:TickType
LOW_52_WEEK	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				LOW_52_WEEK,$/;"	e	enum:TickType
LOW_EFP_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				LOW_EFP_COMPUTATION,$/;"	e	enum:TickType
LegOpenClose	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^enum LegOpenClose { SAME_POS, OPEN_POS, CLOSE_POS, UNKNOWN_POS };$/;"	g
List	infra/monitoring/cluster.py	/^from typing import Mapping, Sequence, List$/;"	i
List	infra/monitoring/operator.py	/^from typing import Mapping, Sequence, List$/;"	i
List	infra/monitoring/thanos.py	/^from typing import Mapping, Sequence, List$/;"	i
LoadLibrary	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K LoadLibrary(K ignore)$/;"	f
LoggingConfigurable	notebooks/q/kxpy/kx_comm.py	/^from traitlets.config import LoggingConfigurable$/;"	i
MANAGED_ACCTS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MANAGED_ACCTS             = 15;$/;"	v
MARKET_DATA_TYPE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MARKET_DATA_TYPE          = 58;$/;"	v
MARKET_DEPTH	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MARKET_DEPTH              = 12;$/;"	v
MARKET_DEPTH_L2	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MARKET_DEPTH_L2           = 13;$/;"	v
MARK_PRICE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				MARK_PRICE,$/;"	e	enum:TickType
MIN_SERVER_VER_ACCOUNT_SUMMARY	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_ACCOUNT_SUMMARY        = 67;$/;"	v
MIN_SERVER_VER_ALGO_ORDERS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_ALGO_ORDERS            = 41;$/;"	v
MIN_SERVER_VER_CANCEL_CALC_IMPLIED_VOLAT	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_CANCEL_CALC_IMPLIED_VOLAT = 50;$/;"	v
MIN_SERVER_VER_CANCEL_CALC_OPTION_PRICE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_CANCEL_CALC_OPTION_PRICE  = 50;$/;"	v
MIN_SERVER_VER_CONTRACT_DATA_CHAIN	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_CONTRACT_DATA_CHAIN    = 40;$/;"	v
MIN_SERVER_VER_DELTA_NEUTRAL_CONID	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_DELTA_NEUTRAL_CONID    = 58;$/;"	v
MIN_SERVER_VER_DELTA_NEUTRAL_OPEN_CLOSE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_DELTA_NEUTRAL_OPEN_CLOSE = 66;$/;"	v
MIN_SERVER_VER_EXECUTION_DATA_CHAIN	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_EXECUTION_DATA_CHAIN   = 42;$/;"	v
MIN_SERVER_VER_FUNDAMENTAL_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_FUNDAMENTAL_DATA       = 40;$/;"	v
MIN_SERVER_VER_HEDGE_ORDERS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_HEDGE_ORDERS			= 54;$/;"	v
MIN_SERVER_VER_LINKING	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_LINKING            = 70;$/;"	v
MIN_SERVER_VER_NOT_HELD	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_NOT_HELD               = 44;$/;"	v
MIN_SERVER_VER_OPT_OUT_SMART_ROUTING	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_OPT_OUT_SMART_ROUTING  = 56;$/;"	v
MIN_SERVER_VER_ORDER_COMBO_LEGS_PRICE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_ORDER_COMBO_LEGS_PRICE = 61;$/;"	v
MIN_SERVER_VER_PLACE_ORDER_CONID	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_PLACE_ORDER_CONID      = 46;$/;"	v
MIN_SERVER_VER_POSITIONS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_POSITIONS              = 67;$/;"	v
MIN_SERVER_VER_PTA_ORDERS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_PTA_ORDERS             = 39;$/;"	v
MIN_SERVER_VER_REQ_CALC_IMPLIED_VOLAT	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_REQ_CALC_IMPLIED_VOLAT = 49;$/;"	v
MIN_SERVER_VER_REQ_CALC_OPTION_PRICE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_REQ_CALC_OPTION_PRICE  = 50;$/;"	v
MIN_SERVER_VER_REQ_GLOBAL_CANCEL	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_REQ_GLOBAL_CANCEL      = 53;$/;"	v
MIN_SERVER_VER_REQ_MARKET_DATA_TYPE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_REQ_MARKET_DATA_TYPE	= 55;$/;"	v
MIN_SERVER_VER_REQ_MKT_DATA_CONID	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_REQ_MKT_DATA_CONID     = 47;$/;"	v
MIN_SERVER_VER_SCALE_ORDERS2	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_SCALE_ORDERS2          = 40;$/;"	v
MIN_SERVER_VER_SCALE_ORDERS3	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_SCALE_ORDERS3          = 60;$/;"	v
MIN_SERVER_VER_SCALE_TABLE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_SCALE_TABLE            = 69;$/;"	v
MIN_SERVER_VER_SEC_ID_TYPE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_SEC_ID_TYPE            = 45;$/;"	v
MIN_SERVER_VER_SMART_COMBO_ROUTING_PARAMS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_SMART_COMBO_ROUTING_PARAMS = 57;$/;"	v
MIN_SERVER_VER_SSHORTX	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_SSHORTX                = 52;$/;"	v
MIN_SERVER_VER_SSHORTX_OLD	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_SSHORTX_OLD            = 51;$/;"	v
MIN_SERVER_VER_TRADING_CLASS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_TRADING_CLASS          = 68;$/;"	v
MIN_SERVER_VER_TRAILING_PERCENT	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_TRAILING_PERCENT       = 62;$/;"	v
MIN_SERVER_VER_UNDER_COMP	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int MIN_SERVER_VER_UNDER_COMP             = 40;$/;"	v
MODEL_OPTION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				MODEL_OPTION,$/;"	e	enum:TickType
Mapping	infra/monitoring/cluster.py	/^from typing import Mapping, Sequence, List$/;"	i
Mapping	infra/monitoring/operator.py	/^from typing import Mapping, Sequence, List$/;"	i
Mapping	infra/monitoring/thanos.py	/^from typing import Mapping, Sequence, List$/;"	i
Mapping	test/kafkpers/__init__.py	/^from typing import Mapping, Sequence$/;"	i
Mapping	test/kafktick/__init__.py	/^from typing import Mapping, Sequence$/;"	i
Mapping	test/sensor/__init__.py	/^from typing import Mapping, Sequence$/;"	i
MarketDataType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommonDefs.h	/^enum MarketDataType { $/;"	g
MonitoringCluster	infra/monitoring/cluster.py	/^class MonitoringCluster(pulumi.ComponentResource):$/;"	c
MonitoringOperator	__main__.py	/^from infra.monitoring import MonitoringOperator$/;"	i
MonitoringOperator	infra/monitoring/operator.py	/^class MonitoringOperator(object):$/;"	c
NEWS_BULLETINS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int NEWS_BULLETINS            = 14;$/;"	v
NEWS_MSG	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int NEWS_MSG              = 1;    \/\/ standard IB news bulleting message$/;"	v
NEXT_VALID_ID	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int NEXT_VALID_ID             = 9;$/;"	v
NOT_SET	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				NOT_SET };$/;"	e	enum:TickType
NO_ROW_NUMBER_SPECIFIED	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	14;"	d
NO_VALID_ERROR_CODE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TwsSocketClientErrors.h	/^static const int NO_VALID_ERROR_CODE = 0;$/;"	v
NO_VALID_ID	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TwsSocketClientErrors.h	/^static const int NO_VALID_ID = -1;$/;"	v
O	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	95;"	d
OPEN	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				OPEN,$/;"	e	enum:TickType
OPEN_EFP_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				OPEN_EFP_COMPUTATION,$/;"	e	enum:TickType
OPEN_INTEREST	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				OPEN_INTEREST,$/;"	e	enum:TickType
OPEN_ORDER	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int OPEN_ORDER                = 5;$/;"	v
OPEN_ORDER_END	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int OPEN_ORDER_END            = 53;$/;"	v
OPEN_POS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^enum LegOpenClose { SAME_POS, OPEN_POS, CLOSE_POS, UNKNOWN_POS };$/;"	e	enum:LegOpenClose
OPTION_ASK_EXCH	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				OPTION_ASK_EXCH,$/;"	e	enum:TickType
OPTION_BID_EXCH	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				OPTION_BID_EXCH,$/;"	e	enum:TickType
OPTION_CALL_OPEN_INTEREST	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				OPTION_CALL_OPEN_INTEREST,$/;"	e	enum:TickType
OPTION_CALL_VOLUME	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				OPTION_CALL_VOLUME,$/;"	e	enum:TickType
OPTION_HISTORICAL_VOL	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				OPTION_HISTORICAL_VOL,$/;"	e	enum:TickType
OPTION_IMPLIED_VOL	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				OPTION_IMPLIED_VOL,$/;"	e	enum:TickType
OPTION_PUT_OPEN_INTEREST	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				OPTION_PUT_OPEN_INTEREST,$/;"	e	enum:TickType
OPTION_PUT_VOLUME	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				OPTION_PUT_VOLUME,$/;"	e	enum:TickType
ORDER_STATE_H__INCLUDED	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	5;"	d
ORDER_STATUS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int ORDER_STATUS              = 3;$/;"	v
OnAddString	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	/^LRESULT CHScrollListBox::OnAddString(WPARAM wParam, LPARAM lParam)$/;"	f	class:CHScrollListBox
OnDeleteString	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	/^LRESULT CHScrollListBox::OnDeleteString(WPARAM wParam, LPARAM lParam)$/;"	f	class:CHScrollListBox
OnInsertString	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	/^LRESULT CHScrollListBox::OnInsertString(WPARAM wParam, LPARAM lParam)$/;"	f	class:CHScrollListBox
OnResetContent	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	/^LRESULT CHScrollListBox::OnResetContent(WPARAM wParam, LPARAM lParam)$/;"	f	class:CHScrollListBox
Order	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	Order()$/;"	f	struct:Order
Order	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^struct Order$/;"	s
OrderComboLeg	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	OrderComboLeg()$/;"	f	struct:OrderComboLeg
OrderComboLeg	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^struct OrderComboLeg$/;"	s
OrderComboLegList	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	typedef std::vector<OrderComboLegSPtr> OrderComboLegList;$/;"	t	struct:Order
OrderComboLegListSPtr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	typedef shared_ptr<OrderComboLegList> OrderComboLegListSPtr;$/;"	t	struct:Order
OrderComboLegSPtr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^typedef shared_ptr<OrderComboLeg> OrderComboLegSPtr;$/;"	t
OrderId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommonDefs.h	/^typedef long OrderId;$/;"	t
OrderState	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	/^	explicit OrderState()$/;"	f	struct:OrderState
OrderState	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	/^struct OrderState {$/;"	s
Origin	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^enum Origin { CUSTOMER,$/;"	g
Output	clients/core.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Output	infra/monitoring/cluster.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Output	infra/monitoring/operator.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Output	infra/monitoring/thanos.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Output	test/kafkpers/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Output	test/kafktick/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
Output	test/sensor/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
P	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	98;"	d
PLACE_ORDER	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int PLACE_ORDER                   = 3;$/;"	v
PORTFOLIO_VALUE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int PORTFOLIO_VALUE           = 7;$/;"	v
POSITION_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int POSITION_DATA             = 61;$/;"	v
POSITION_END	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int POSITION_END              = 62;$/;"	v
PROFILES	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommonDefs.h	/^enum faDataType { GROUPS=1, PROFILES, ALIASES } ;$/;"	e	enum:faDataType
PYIngestCanary	__main__.py	/^from test.kafka import PYIngestCanary, KDBIngestCanary$/;"	i
PYIngestCanary	test/kafka/__init__.py	/^class PYIngestCanary(pulumi.ComponentResource):$/;"	c
Q	clients/ibroke/QInteractiveBrokers/src/helpers.h	11;"	d
QUERY_DISPLAY_GROUPS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int QUERY_DISPLAY_GROUPS          = 67;$/;"	v
R	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	96;"	d
REALTIME	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommonDefs.h	/^	REALTIME = 1, $/;"	e	enum:MarketDataType
REAL_TIME_BARS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REAL_TIME_BARS            = 50;$/;"	v
RECEIVE_FA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int RECEIVE_FA                = 16;$/;"	v
REPLACE_FA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REPLACE_FA                    = 19;$/;"	v
REQ_ACCOUNT_SUMMARY	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_ACCOUNT_SUMMARY           = 62;$/;"	v
REQ_ACCT_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_ACCT_DATA                 = 6;$/;"	v
REQ_ALL_OPEN_ORDERS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_ALL_OPEN_ORDERS           = 16;$/;"	v
REQ_AUTO_OPEN_ORDERS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_AUTO_OPEN_ORDERS          = 15;$/;"	v
REQ_CALC_IMPLIED_VOLAT	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_CALC_IMPLIED_VOLAT        = 54;$/;"	v
REQ_CALC_OPTION_PRICE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_CALC_OPTION_PRICE         = 55;$/;"	v
REQ_CONTRACT_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_CONTRACT_DATA             = 9;$/;"	v
REQ_CURRENT_TIME	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_CURRENT_TIME              = 49;$/;"	v
REQ_EXECUTIONS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_EXECUTIONS                = 7;$/;"	v
REQ_FA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_FA                        = 18;$/;"	v
REQ_FUNDAMENTAL_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_FUNDAMENTAL_DATA          = 52;$/;"	v
REQ_GLOBAL_CANCEL	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_GLOBAL_CANCEL             = 58;$/;"	v
REQ_HISTORICAL_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_HISTORICAL_DATA           = 20;$/;"	v
REQ_IDS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_IDS                       = 8;$/;"	v
REQ_MANAGED_ACCTS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_MANAGED_ACCTS             = 17;$/;"	v
REQ_MARKET_DATA_TYPE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_MARKET_DATA_TYPE          = 59;$/;"	v
REQ_MKT_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_MKT_DATA                  = 1;$/;"	v
REQ_MKT_DEPTH	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_MKT_DEPTH                 = 10;$/;"	v
REQ_NEWS_BULLETINS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_NEWS_BULLETINS            = 12;$/;"	v
REQ_OPEN_ORDERS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_OPEN_ORDERS               = 5;$/;"	v
REQ_POSITIONS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_POSITIONS                 = 61;$/;"	v
REQ_REAL_TIME_BARS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_REAL_TIME_BARS            = 50;$/;"	v
REQ_SCANNER_PARAMETERS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_SCANNER_PARAMETERS        = 24;$/;"	v
REQ_SCANNER_SUBSCRIPTION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int REQ_SCANNER_SUBSCRIPTION      = 22;$/;"	v
RT_VOLUME	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				RT_VOLUME,$/;"	e	enum:TickType
RandomPassword	infra/monitoring/cluster.py	/^from pulumi_random import RandomPassword$/;"	i
RandomPassword	infra/monitoring/operator.py	/^from pulumi_random import RandomPassword$/;"	i
RandomPassword	infra/monitoring/thanos.py	/^from pulumi_random import RandomPassword$/;"	i
ResetHExtent	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	/^void CHScrollListBox::ResetHExtent()$/;"	f	class:CHScrollListBox
ResourceOptions	clients/core.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
ResourceOptions	infra/monitoring/cluster.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
ResourceOptions	infra/monitoring/cluster.py	/^from pulumi import get_stack, ResourceOptions, StackReference$/;"	i
ResourceOptions	infra/monitoring/operator.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
ResourceOptions	infra/monitoring/operator.py	/^from pulumi import get_stack, ResourceOptions, StackReference$/;"	i
ResourceOptions	infra/monitoring/thanos.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
ResourceOptions	infra/monitoring/thanos.py	/^from pulumi import get_stack, ResourceOptions, StackReference$/;"	i
ResourceOptions	test/kafkpers/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
ResourceOptions	test/kafktick/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
ResourceOptions	test/sensor/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
S	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef char*S,C;typedef unsigned char G;typedef short H;typedef int I;typedef long long J;typedef float E;typedef double F;typedef void V;$/;"	t
SAME_POS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^enum LegOpenClose { SAME_POS, OPEN_POS, CLOSE_POS, UNKNOWN_POS };$/;"	e	enum:LegOpenClose
SCANNER_DATA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int SCANNER_DATA              = 20;$/;"	v
SCANNER_PARAMETERS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int SCANNER_PARAMETERS        = 19;$/;"	v
SERVER_VERSION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int SERVER_VERSION    = 38;$/;"	v
SET_SERVER_LOGLEVEL	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int SET_SERVER_LOGLEVEL           = 14;$/;"	v
SHORTABLE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				SHORTABLE,$/;"	e	enum:TickType
START_API	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int START_API                     = 71;$/;"	v
SUBSCRIBE_TO_GROUP_EVENTS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int SUBSCRIBE_TO_GROUP_EVENTS     = 68;$/;"	v
SW	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	100;"	d
SYSTEM_ERROR	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TwsSocketClientErrors.h	/^static const int SYSTEM_ERROR = 600;$/;"	v
ScanData	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^struct ScanData {$/;"	s	namespace:__anon1
ScannerSubscription	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^	ScannerSubscription() {$/;"	f	struct:ScannerSubscription
ScannerSubscription	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^struct ScannerSubscription {$/;"	s
Sensor	test/kafkpers/__init__.py	/^class Sensor(pulumi.ComponentResource):$/;"	c
Sensor	test/kafktick/__init__.py	/^class Sensor(pulumi.ComponentResource):$/;"	c
SensorSpec	test/kafkpers/__init__.py	/^class SensorSpec(object):$/;"	c
SensorSpec	test/kafktick/__init__.py	/^class SensorSpec(object):$/;"	c
Sequence	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^from typing import Sequence$/;"	i
Sequence	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^from typing import Sequence$/;"	i
Sequence	infra/monitoring/cluster.py	/^from typing import Mapping, Sequence, List$/;"	i
Sequence	infra/monitoring/operator.py	/^from typing import Mapping, Sequence, List$/;"	i
Sequence	infra/monitoring/thanos.py	/^from typing import Mapping, Sequence, List$/;"	i
Sequence	test/kafkpers/__init__.py	/^from typing import Mapping, Sequence$/;"	i
Sequence	test/kafktick/__init__.py	/^from typing import Mapping, Sequence$/;"	i
Sequence	test/sensor/__init__.py	/^from typing import Mapping, Sequence$/;"	i
SetNewHExtent	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	/^void CHScrollListBox::SetNewHExtent(LPCTSTR lpszNewString)$/;"	f	class:CHScrollListBox
SetSocketNonBlocking	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocketPlatform.h	/^	inline bool SetSocketNonBlocking(int sockfd) { $/;"	f
SocketClose	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocketPlatform.h	/^	inline int SocketClose(int sockfd) { return close( sockfd); };$/;"	f
SocketClose	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocketPlatform.h	/^	inline int SocketClose(int sockfd) { return closesocket( sockfd); };$/;"	f
SocketsDestroy	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocketPlatform.h	/^	inline bool SocketsDestroy() { return ( !WSACleanup()); };$/;"	f
SocketsDestroy	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocketPlatform.h	/^	inline bool SocketsDestroy() { return true; };$/;"	f
SocketsInit	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocketPlatform.h	/^	inline bool SocketsInit( void) {$/;"	f
SocketsInit	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocketPlatform.h	/^	inline bool SocketsInit() { return true; };$/;"	f
StackReference	infra/monitoring/cluster.py	/^from pulumi import get_stack, ResourceOptions, StackReference$/;"	i
StackReference	infra/monitoring/operator.py	/^from pulumi import get_stack, ResourceOptions, StackReference$/;"	i
StackReference	infra/monitoring/thanos.py	/^from pulumi import get_stack, ResourceOptions, StackReference$/;"	i
StrimziKafkaOperator	__main__.py	/^from infra.kafka import StrimziKafkaOperator$/;"	i
StrimziKafkaOperator	infra/kafka.py	/^class StrimziKafkaOperator(pulumi.ComponentResource):$/;"	c
THIS_FILE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	9;"	d	file:
TICK_EFP	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int TICK_EFP                  = 47;$/;"	v
TICK_GENERIC	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int TICK_GENERIC              = 45;$/;"	v
TICK_OPTION_COMPUTATION	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int TICK_OPTION_COMPUTATION   = 21;$/;"	v
TICK_PRICE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int TICK_PRICE                = 1;$/;"	v
TICK_SIZE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int TICK_SIZE                 = 2;$/;"	v
TICK_SNAPSHOT_END	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int TICK_SNAPSHOT_END         = 57;$/;"	v
TICK_STRING	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int TICK_STRING               = 46;$/;"	v
TRADE_COUNT	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				TRADE_COUNT,$/;"	e	enum:TickType
TRADE_RATE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				TRADE_RATE,$/;"	e	enum:TickType
TX	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	116;"	d
TagValue	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TagValue.h	/^	TagValue() {}$/;"	f	struct:TagValue
TagValue	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TagValue.h	/^	TagValue(const IBString& p_tag, const IBString& p_value)$/;"	f	struct:TagValue
TagValue	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TagValue.h	/^struct TagValue$/;"	s
TagValueList	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TagValue.h	/^typedef std::vector<TagValueSPtr> TagValueList;$/;"	t
TagValueListSPtr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TagValue.h	/^typedef shared_ptr<TagValueList> TagValueListSPtr;$/;"	t
TagValueSPtr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TagValue.h	/^typedef shared_ptr<TagValue> TagValueSPtr;$/;"	t
Thanos	infra/monitoring/thanos.py	/^class Thanos(object):$/;"	c
TickType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^enum TickType { BID_SIZE, BID, ASK, ASK_SIZE, LAST, LAST_SIZE,$/;"	g
TickerId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommonDefs.h	/^typedef long TickerId;$/;"	t
TwsConnectionTime	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^IBString IBClient::TwsConnectionTime()$/;"	f	class:IBClient
TwsConnectionTime	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K TwsConnectionTime(K ignore)$/;"	f
TwsConnectionTime	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^IBString EClientSocketBase::TwsConnectionTime()$/;"	f	class:EClientSocketBase
U	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct{G g[16];}U;$/;"	t	typeref:struct:__anon4
U	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	99;"	d
UNKNOWN	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^              UNKNOWN };$/;"	e	enum:Origin
UNKNOWN_POS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^enum LegOpenClose { SAME_POS, OPEN_POS, CLOSE_POS, UNKNOWN_POS };$/;"	e	enum:LegOpenClose
UNSET_DOUBLE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	12;"	d
UNSET_DOUBLE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	12;"	d
UNSET_INTEGER	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	13;"	d
UNSET_INTEGER	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	13;"	d
UNSUBSCRIBE_FROM_GROUP_EVENTS	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int UNSUBSCRIBE_FROM_GROUP_EVENTS = 70;$/;"	v
UPDATE_DISPLAY_GROUP	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int UPDATE_DISPLAY_GROUP          = 69;$/;"	v
UU	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	40;"	d
UnderComp	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	UnderComp()$/;"	f	struct:UnderComp
UnderComp	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^struct UnderComp$/;"	s
Unicode	notebooks/q/kxpy/kx_comm.py	/^from traitlets import Instance, Unicode, Bytes, Bool, Dict, Any, default$/;"	i
Use	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   Use() { forward_ = this; back_ = this; }$/;"	f	class:shared_ptr_defs::Use
Use	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   Use(const Use& u) { insert(u); }$/;"	f	class:shared_ptr_defs::Use
Use	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   typedef shared_ptr_defs::Use Use;$/;"	t	class:shared_ptr
Use	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^class Use {$/;"	c	namespace:shared_ptr_defs
V	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef char*S,C;typedef unsigned char G;typedef short H;typedef int I;typedef long long J;typedef float E;typedef double F;typedef void V;$/;"	t
VERIFY_COMPLETED	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int VERIFY_COMPLETED          = 66;$/;"	v
VERIFY_MESSAGE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int VERIFY_MESSAGE                = 66;$/;"	v
VERIFY_MESSAGE_API	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int VERIFY_MESSAGE_API        = 65;$/;"	v
VERIFY_REQUEST	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^const int VERIFY_REQUEST                = 65;$/;"	v
VOLUME	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				HIGH, LOW, VOLUME, CLOSE,$/;"	e	enum:TickType
VOLUME_RATE	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^				VOLUME_RATE,$/;"	e	enum:TickType
XD	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	63;"	d
XT	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	62;"	d
Z	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	97;"	d
ZC	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	111;"	d
ZE	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	109;"	d
ZF	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	110;"	d
ZH	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	106;"	d
ZI	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	107;"	d
ZJ	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	108;"	d
ZK	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	105;"	d
ZS	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	112;"	d
ZV	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	104;"	d
__all__	notebooks/q/kxpy/kx_comm.py	/^__all__ = ['Comm']$/;"	v
__del__	notebooks/q/kxpy/kx_comm.py	/^    def __del__(self):$/;"	m	class:Comm	file:
__init__	clients/core.py	/^    def __init__(self):$/;"	m	class:KDBFullSensor
__init__	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def __init__(self, name: str):$/;"	m	class:CustomVerboseIQFeedAdminListener
__init__	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def __init__(self, name: str):$/;"	m	class:CustomVerboseIQFeedListener
__init__	clients/register.py	/^    def __init__(self, kafka_ingest, monitoring_cluster, use_ingress_kafka):$/;"	m	class:KDBSensorRegistry
__init__	core/__init__.py	/^    def __init__(self, kafka_host, kafka_port, kafka_topic):$/;"	m	class:KDBAgent
__init__	infra/docker/docker.py	/^    def __init__($/;"	m	class:DockerFileBuilder
__init__	infra/docker/docker.py	/^    def __init__($/;"	m	class:ImageBuilder
__init__	infra/dvc.py	/^    def __init__(self):$/;"	m	class:DVCData
__init__	infra/dvc.py	/^    def __init__(self):$/;"	m	class:DVCFlow
__init__	infra/dvc.py	/^    def __init__(self):$/;"	m	class:DVCModel
__init__	infra/filegen.py	/^    def __init__($/;"	m	class:FileBuilder
__init__	infra/kafka.py	/^    def __init__($/;"	m	class:KafkaTopic
__init__	infra/kafka.py	/^    def __init__(self, k8s_provider):$/;"	m	class:StrimziKafkaOperator
__init__	infra/monitoring/cluster.py	/^    def __init__(self):$/;"	m	class:MonitoringCluster
__init__	infra/monitoring/operator.py	/^    def __init__(self, k8s_provider):$/;"	m	class:MonitoringOperator
__init__	infra/monitoring/thanos.py	/^    def __init__(self, k8s_provider):$/;"	m	class:Thanos
__init__	notebooks/q/kxpy/kx_backend_inline.py	/^ def __init__(self,df=None):$/;"	m	class:qshell
__init__	notebooks/q/kxpy/kx_comm.py	/^    def __init__(self, target_name='', data=None, metadata=None, buffers=None, **kwargs):$/;"	m	class:Comm
__init__	test/kafka/__init__.py	/^    def __init__(self,name,kafka_operator):$/;"	m	class:PYIngestCanary
__init__	test/kafka/__init__.py	/^    def __init__(self,name,kafka_operator,monitoring_operator):$/;"	m	class:KDBIngestCanary
__init__	test/kafkpers/__init__.py	/^    def __init__(self):$/;"	m	class:AddAgg
__init__	test/kafkpers/__init__.py	/^    def __init__(self):$/;"	m	class:SensorSpec
__init__	test/kafkpers/__init__.py	/^    def __init__(self,$/;"	m	class:Sensor
__init__	test/kafktick/__init__.py	/^    def __init__(self):$/;"	m	class:SensorSpec
__init__	test/kafktick/__init__.py	/^    def __init__(self,$/;"	m	class:Sensor
__init__	test/sensor/__init__.py	/^    def __init__(self):$/;"	m	class:KDBSensorSpec
__init__	test/sensor/__init__.py	/^    def __init__(self,$/;"	m	class:KDBFullSensor
_close_callback	notebooks/q/kxpy/kx_comm.py	/^    _close_callback = Any()$/;"	v	class:Comm
_close_data	notebooks/q/kxpy/kx_comm.py	/^    _close_data = Dict(help="data dict, if any, to be included in comm_close")$/;"	v	class:Comm
_closed	notebooks/q/kxpy/kx_comm.py	/^    _closed = Bool(True)$/;"	v	class:Comm
_default_comm_id	notebooks/q/kxpy/kx_comm.py	/^    def _default_comm_id(self):$/;"	m	class:Comm
_default_kernel	notebooks/q/kxpy/kx_comm.py	/^    def _default_kernel(self):$/;"	m	class:Comm
_default_topic	notebooks/q/kxpy/kx_comm.py	/^    def _default_topic(self):$/;"	m	class:Comm
_msg_callback	notebooks/q/kxpy/kx_comm.py	/^    _msg_callback = Any()$/;"	v	class:Comm
_open_data	notebooks/q/kxpy/kx_comm.py	/^    _open_data = Dict(help="data dict, if any, to be included in comm_open")$/;"	v	class:Comm
_publish_msg	notebooks/q/kxpy/kx_comm.py	/^    def _publish_msg(self, msg_type, data=None, metadata=None, buffers=None, **keys):$/;"	m	class:Comm
a	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	struct:k0
abovePrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    double abovePrice;$/;"	m	struct:ScannerSubscription
aboveVolume	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    int aboveVolume;$/;"	m	struct:ScannerSubscription
account	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString account; \/\/ IB account$/;"	m	struct:Order
accountDownloadEnd	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::accountDownloadEnd(const IBString &accountName)$/;"	f	class:IBClient
accountSummary	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::accountSummary(int reqId, const IBString &account, const IBString &tag, const IBString &value, const IBString &curency)$/;"	f	class:IBClient
accountSummaryEnd	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::accountSummaryEnd(int reqId)$/;"	f	class:IBClient
acctNumber	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	acctNumber;$/;"	m	struct:Execution
action	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	action; \/\/BUY\/SELL\/SSHORT$/;"	m	struct:ComboLeg
action	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString action;$/;"	m	struct:Order
activeStartTime	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString activeStartTime;	\/\/ for GTC orders$/;"	m	struct:Order
activeStopTime	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString activeStopTime;	\/\/ for GTC orders$/;"	m	struct:Order
add_grafana_dashboard	infra/monitoring/cluster.py	/^    def add_grafana_dashboard(self, dashboard, columns_per_row=2):$/;"	m	class:MonitoringCluster
add_grafana_dashboard	infra/monitoring/operator.py	/^    def add_grafana_dashboard(self, dashboard, columns_per_row=2):$/;"	m	class:MonitoringOperator
add_grafana_dashboard_graph	infra/monitoring/cluster.py	/^    def add_grafana_dashboard_graph(self, dashboard, graph):$/;"	m	class:MonitoringCluster
add_grafana_dashboard_graph	infra/monitoring/operator.py	/^    def add_grafana_dashboard_graph(self, dashboard, graph):$/;"	m	class:MonitoringOperator
add_sensor	clients/register.py	/^    def add_sensor(self, name, args:KDBSensorArgs):$/;"	m	class:KDBSensorRegistry
add_service_monitor	infra/monitoring/cluster.py	/^    def add_service_monitor(self, name:str, labels, namespace:str, interval:str, provider):$/;"	m	class:MonitoringCluster
add_service_monitor	infra/monitoring/operator.py	/^    def add_service_monitor(self, name:str, labels, namespace:str, interval:str, port=8080, k8s_provider=None):$/;"	m	class:MonitoringOperator
add_topic	infra/kafka.py	/^    def add_topic(self,$/;"	m	class:StrimziKafkaOperator
admin_conn	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^    admin_conn = iq.AdminConn(name="Launcher")$/;"	v
admin_listener	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^    admin_listener = CustomVerboseIQFeedListener("Launcher-listen")$/;"	v
algoParams	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	TagValueListSPtr algoParams;$/;"	m	struct:Order
algoStrategy	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString algoStrategy;$/;"	m	struct:Order
allOrNone	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     allOrNone;$/;"	m	struct:Order
appName	clients/iqfeed/docker-iqfeed/app/proxy.js	/^	appName: process.env.APP_NAME || "MATLAB_1694",$/;"	p	class:config
appName	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^	appName: process.env.APP_NAME || "MATLAB_1694",$/;"	p	class:config
appVersion	clients/iqfeed/docker-iqfeed/app/proxy.js	/^	appVersion: process.env.APP_VERSION || "1.0",$/;"	p	class:config
appVersion	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^	appVersion: process.env.APP_VERSION || "1.0",$/;"	p	class:config
argparse	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^import argparse$/;"	i
argparse	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^import argparse$/;"	i
args	clients/binance/__init__.py	/^    args={$/;"	v
args	clients/ibroke/__init__.py	/^    args={$/;"	v
args	clients/iqfeed/__init__.py	/^    args={$/;"	v
arguments	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^    arguments = parser.parse_args()$/;"	v
assert	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/StdAfx.h	10;"	d
assets	clients/bitmex/__init__.py	/^    assets=[],$/;"	v
asyncio	test/kafka/consumer.py	/^import asyncio$/;"	i
asyncio	test/kafka/producer.py	/^import asyncio$/;"	i
auctionStrategy	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      auctionStrategy; \/\/ AUCTION_MATCH, AUCTION_IMPROVEMENT, AUCTION_TRANSPARENT$/;"	m	struct:Order
auxPrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   auxPrice;$/;"	m	struct:Order
average	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	double average;$/;"	m	struct:__anon1::BarData
averageOptionVolumeAbove	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^	int averageOptionVolumeAbove;$/;"	m	struct:ScannerSubscription
avgPrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	double		avgPrice;$/;"	m	struct:Execution
back_	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   mutable const Use *back_;$/;"	m	class:shared_ptr_defs::Use
backend_nbagg	notebooks/q/kxpy/kx_backend_inline.py	/^  from matplotlib.backends import backend_nbagg$/;"	i
barCount	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	int barCount;$/;"	m	struct:__anon1::BarData
base	clients/binance/__init__.py	/^    base="",$/;"	v
base	clients/ibroke/__init__.py	/^    base="",$/;"	v
base	clients/iqfeed/__init__.py	/^    base="",$/;"	v
basisPoints	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   basisPoints;      \/\/ EFP orders only$/;"	m	struct:Order
basisPointsType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      basisPointsType;  \/\/ EFP orders only$/;"	m	struct:Order
belowPrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    double belowPrice;$/;"	m	struct:ScannerSubscription
benchmark	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	IBString benchmark;$/;"	m	struct:__anon1::ScanData
blockOrder	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     blockOrder;$/;"	m	struct:Order
bondContractDetails	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::bondContractDetails(int reqId, const ContractDetails& contractDetails)$/;"	f	class:IBClient
bondType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	bondType;$/;"	m	struct:ContractDetails
bufferedRead	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^int EClientSocketBase::bufferedRead()$/;"	f	class:EClientSocketBase
bufferedSend	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^int EClientSocketBase::bufferedSend(const char* buf, size_t sz)$/;"	f	class:EClientSocketBase
bufferedSend	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^int EClientSocketBase::bufferedSend(const std::string& msg)$/;"	f	class:EClientSocketBase
calculateImpliedVolatility	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::calculateImpliedVolatility(TickerId reqId, const Contract &contract, double optionPrice, double underPrice)$/;"	f	class:IBClient
calculateImpliedVolatility	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K calculateImpliedVolatility(K reqId, K contract, K optionPrice, K underPrice)$/;"	f
calculateImpliedVolatility	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::calculateImpliedVolatility(TickerId reqId, const Contract &contract, double optionPrice, double underPrice) {$/;"	f	class:EClientSocketBase
calculateOptionPrice	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::calculateOptionPrice(TickerId reqId, const Contract &contract, double volatility, double underPrice)$/;"	f	class:IBClient
calculateOptionPrice	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K calculateOptionPrice( K reqId, K contract, K volatility, K underPrice)$/;"	f
calculateOptionPrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::calculateOptionPrice(TickerId reqId, const Contract &contract, double volatility, double underPrice) {$/;"	f	class:EClientSocketBase
callable	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	bool		callable;$/;"	m	struct:ContractDetails
canary	__main__.py	/^canary = KDBIngestCanary($/;"	v
cancelAccountSummary	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelAccountSummary(int reqId)$/;"	f	class:IBClient
cancelAccountSummary	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelAccountSummary(K reqId)$/;"	f
cancelAccountSummary	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelAccountSummary( int reqId)$/;"	f	class:EClientSocketBase
cancelCalculateImpliedVolatility	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelCalculateImpliedVolatility(TickerId reqId)$/;"	f	class:IBClient
cancelCalculateImpliedVolatility	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelCalculateImpliedVolatility(K reqId)$/;"	f
cancelCalculateImpliedVolatility	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelCalculateImpliedVolatility(TickerId reqId) {$/;"	f	class:EClientSocketBase
cancelCalculateOptionPrice	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelCalculateOptionPrice(TickerId reqId)$/;"	f	class:IBClient
cancelCalculateOptionPrice	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelCalculateOptionPrice(K reqId)$/;"	f
cancelCalculateOptionPrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelCalculateOptionPrice(TickerId reqId) {$/;"	f	class:EClientSocketBase
cancelFundamentalData	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelFundamentalData(TickerId reqId)$/;"	f	class:IBClient
cancelFundamentalData	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelFundamentalData(K reqId)$/;"	f
cancelFundamentalData	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelFundamentalData( TickerId reqId)$/;"	f	class:EClientSocketBase
cancelHistoricalData	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelHistoricalData(TickerId tickerId)$/;"	f	class:IBClient
cancelHistoricalData	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelHistoricalData(K tickerId)$/;"	f
cancelHistoricalData	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelHistoricalData(TickerId tickerId)$/;"	f	class:EClientSocketBase
cancelMktData	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelMktData(TickerId id)$/;"	f	class:IBClient
cancelMktData	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelMktData(K id) {$/;"	f
cancelMktData	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelMktData(TickerId tickerId)$/;"	f	class:EClientSocketBase
cancelMktDepth	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelMktDepth(TickerId tickerId)$/;"	f	class:IBClient
cancelMktDepth	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelMktDepth(K tickerId)$/;"	f
cancelMktDepth	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelMktDepth( TickerId tickerId)$/;"	f	class:EClientSocketBase
cancelNewsBulletins	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelNewsBulletins()$/;"	f	class:IBClient
cancelNewsBulletins	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelNewsBulletins(K ignore)$/;"	f
cancelNewsBulletins	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelNewsBulletins()$/;"	f	class:EClientSocketBase
cancelOrder	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelOrder(OrderId id)$/;"	f	class:IBClient
cancelOrder	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelOrder(K id)$/;"	f
cancelOrder	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelOrder( OrderId id)$/;"	f	class:EClientSocketBase
cancelPositions	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelPositions()$/;"	f	class:IBClient
cancelPositions	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelPositions(K ignore)$/;"	f
cancelPositions	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelPositions()$/;"	f	class:EClientSocketBase
cancelRealTimeBars	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelRealTimeBars(TickerId tickerId)$/;"	f	class:IBClient
cancelRealTimeBars	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelRealTimeBars(K tickerId)$/;"	f
cancelRealTimeBars	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelRealTimeBars(TickerId tickerId)$/;"	f	class:EClientSocketBase
cancelScannerSubscription	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::cancelScannerSubscription(int tickerId)$/;"	f	class:IBClient
cancelScannerSubscription	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K cancelScannerSubscription(K tickerId)$/;"	f
cancelScannerSubscription	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::cancelScannerSubscription(int tickerId)$/;"	f	class:EClientSocketBase
category	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	category;$/;"	m	struct:ContractDetails
channels	clients/bitmex/__init__.py	/^    channels=[],$/;"	v
checkDesiredVersion	get_helm.sh	/^checkDesiredVersion() {$/;"	f
checkHelmInstalledVersion	get_helm.sh	/^checkHelmInstalledVersion() {$/;"	f
checkMessages	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^bool IBClient::checkMessages()$/;"	f	class:IBClient
checkMessages	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K checkMessages(K ignore)$/;"	f
checkMessages	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::checkMessages()$/;"	f	class:EClientSocketBase
clean	test/kafktick/__init__.py	/^    def clean(self):$/;"	m	class:Sensor
clean	test/sensor/__init__.py	/^    def clean(self):$/;"	m	class:KDBFullSensor
cleanup	get_helm.sh	/^cleanup() {$/;"	f
clear_output	notebooks/q/kxpy/kx_backend_inline.py	/^def clear_output(wait=False):$/;"	f
clearingAccount	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString clearingAccount; \/\/ True beneficiary of the order$/;"	m	struct:Order
clearingIntent	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString clearingIntent; \/\/ "" (Default), "IB", "Away", "PTA" (PostTrade)$/;"	m	struct:Order
clientId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	/^	int clientId() const { return m_clientId; }$/;"	f	class:EClientSocketBase
clientId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	long		clientId;$/;"	m	struct:Execution
clientId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	long     clientId;$/;"	m	struct:Order
close	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	double close;$/;"	m	struct:__anon1::BarData
close	notebooks/q/kxpy/kx_comm.py	/^    def close(self, data=None, metadata=None, buffers=None):$/;"	m	class:Comm
closesocket	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	91;"	d
code	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TwsSocketClientErrors.h	/^	int	  code() const			        { return m_errorCode; }$/;"	f	class:CodeMsgPair
comboLegs	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	ComboLegListSPtr comboLegs;$/;"	m	struct:Contract
comboLegsDescrip	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString comboLegsDescrip; \/\/ received in open order 14 and up for all combos$/;"	m	struct:Contract
comm_id	notebooks/q/kxpy/kx_comm.py	/^    comm_id = Unicode()$/;"	v	class:Comm
commission	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommissionReport.h	/^	double		commission;$/;"	m	struct:CommissionReport
commission	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	/^	double  commission;$/;"	m	struct:OrderState
commissionCurrency	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	/^	IBString commissionCurrency;$/;"	m	struct:OrderState
commissionReport	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::commissionReport(const CommissionReport &commissionReport)$/;"	f	class:IBClient
commissionreport_def	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommissionReport.h	5;"	d
common_defs_h_INCLUDED	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommonDefs.h	5;"	d
conId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	long		conId;$/;"	m	struct:ComboLeg
conId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	long		conId;$/;"	m	struct:Contract
conId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	long	conId;$/;"	m	struct:UnderComp
config	__main__.py	/^config = pulumi.Config()$/;"	v
config	clients/iqfeed/docker-iqfeed/app/proxy.js	/^var config = {$/;"	c
config	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^var config = {$/;"	c
connect	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^bool IBClient::connect(const char *host, unsigned int port, int clientId)$/;"	f	class:IBClient
connect_	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K connect_(K host, K port, K clientId)$/;"	f
connectionClosed	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::connectionClosed()$/;"	f	class:IBClient
console	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^console = logging.StreamHandler()$/;"	v
consume	test/kafka/consumer.py	/^async def consume():$/;"	f
continuousUpdate	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     continuousUpdate;$/;"	m	struct:Order
contract	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	ContractDetails contract;$/;"	m	struct:__anon1::ScanData
contractDetails	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::contractDetails(int reqId, const ContractDetails& contractDetails)$/;"	f	class:IBClient
contractDetailsEnd	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::contractDetailsEnd(int reqId)$/;"	f	class:IBClient
contractMonth	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	contractMonth;$/;"	m	struct:ContractDetails
contract_def	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	5;"	d
convertBondContractDetails	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^K IBClient::convertBondContractDetails(const ContractDetails &contract)$/;"	f	class:IBClient
convertCommissionReport	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^K IBClient::convertCommissionReport(const CommissionReport &report)$/;"	f	class:IBClient
convertContract	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^K IBClient::convertContract(const Contract &contract)$/;"	f	class:IBClient
convertContractDetails	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^K IBClient::convertContractDetails(const ContractDetails &contract)$/;"	f	class:IBClient
convertExecution	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^K IBClient::convertExecution(const Execution &execution)$/;"	f	class:IBClient
convertOrder	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^K IBClient::convertOrder(const Order &order)$/;"	f	class:IBClient
convertOrderState	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^K IBClient::convertOrderState(const OrderState &orderState)$/;"	f	class:IBClient
convertUnderComp	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^K IBClient::convertUnderComp(const UnderComp &comp)$/;"	f	class:IBClient
convertible	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	bool		convertible;$/;"	m	struct:ContractDetails
core	notebooks/q/kxpy/kx_backend_inline.py	/^import IPython.core.display$/;"	i
coupon	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	double		coupon;$/;"	m	struct:ContractDetails
couponRateAbove	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    double couponRateAbove;$/;"	m	struct:ScannerSubscription
couponRateBelow	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    double couponRateBelow;$/;"	m	struct:ScannerSubscription
couponType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	couponType;$/;"	m	struct:ContractDetails
createContract	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^Z Contract createContract(K dict, std::string &error)$/;"	f
createDictionary	clients/ibroke/QInteractiveBrokers/src/helpers.h	/^Z K createDictionary(std::map<std::string, K> map)$/;"	f
createExecutionFilter	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^Z ExecutionFilter createExecutionFilter(K dict, std::string &error)$/;"	f
createOrder	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^Z Order createOrder(K dict, std::string &error)$/;"	f
createScannerSubscription	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^Z ScannerSubscription createScannerSubscription(K dict, std::string &error)$/;"	f
createTagValueList	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^Z TagValueListSPtr createTagValueList(K dict, std::string &error)$/;"	f
ctrl_file	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^    ctrl_file = arguments.ctrl_file$/;"	v
cumQty	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	int			cumQty;$/;"	m	struct:Execution
currency	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommissionReport.h	/^	IBString	currency;$/;"	m	struct:CommissionReport
currency	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	currency;$/;"	m	struct:Contract
currentTime	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::currentTime(long time)$/;"	f	class:IBClient
cusip	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	cusip;$/;"	m	struct:ContractDetails
date	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	IBString date;$/;"	m	struct:__anon1::BarData
default	notebooks/q/kxpy/kx_comm.py	/^from traitlets import Instance, Unicode, Bytes, Bool, Dict, Any, default$/;"	i
delta	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	double	delta;$/;"	m	struct:UnderComp
delta	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   delta;$/;"	m	struct:Order
deltaNeutralAuxPrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   deltaNeutralAuxPrice;$/;"	m	struct:Order
deltaNeutralClearingAccount	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString deltaNeutralClearingAccount;$/;"	m	struct:Order
deltaNeutralClearingIntent	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString deltaNeutralClearingIntent;$/;"	m	struct:Order
deltaNeutralConId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	long     deltaNeutralConId;$/;"	m	struct:Order
deltaNeutralDesignatedLocation	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString deltaNeutralDesignatedLocation;$/;"	m	struct:Order
deltaNeutralOpenClose	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString deltaNeutralOpenClose;$/;"	m	struct:Order
deltaNeutralOrderType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString deltaNeutralOrderType;$/;"	m	struct:Order
deltaNeutralSettlingFirm	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString deltaNeutralSettlingFirm;$/;"	m	struct:Order
deltaNeutralShortSale	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     deltaNeutralShortSale;$/;"	m	struct:Order
deltaNeutralShortSaleSlot	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      deltaNeutralShortSaleSlot;$/;"	m	struct:Order
deltaNeutralValidation	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::deltaNeutralValidation(int reqId, const UnderComp &underComp)$/;"	f	class:IBClient
descAppend	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	descAppend;$/;"	m	struct:ContractDetails
description	clients/bitmex/__init__.py	/^    description="",$/;"	v
designatedLocation	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	designatedLocation;$/;"	m	struct:ComboLeg
designatedLocation	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString designatedLocation; \/\/ set when slot=2 only.$/;"	m	struct:Order
destroy_api	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^ZV destroy_api() {$/;"	f
df	notebooks/q/kxpy/kx_backend_inline.py	/^df=DisplayFormatter()$/;"	v
disconnect	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::disconnect() const$/;"	f	class:IBClient
disconnect	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K disconnect(K ignore)$/;"	f
discretionaryAmt	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   discretionaryAmt;$/;"	m	struct:Order
display	notebooks/q/kxpy/kx_backend_inline.py	/^def display(*objs, **kwargs):$/;"	f
display	notebooks/q/kxpy/kx_backend_inline.py	/^import IPython.core.display$/;"	i
display	notebooks/q/kxpy/kx_backend_inline.py	/^import IPython.display$/;"	i
displayGroupList	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::displayGroupList(int reqId, const IBString &groups)$/;"	f	class:IBClient
displayGroupUpdated	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::displayGroupUpdated(int reqId, const IBString &contractInfo)$/;"	f	class:IBClient
displaySize	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      displaySize;$/;"	m	struct:Order
display_interactive	notebooks/q/kxpy/kx_backend_inline.py	/^    def display_interactive(*args):$/;"	f	function:draw_if_interactive
distance	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	IBString distance;$/;"	m	struct:__anon1::ScanData
docker	core/__init__.py	/^import pulumi_docker as docker$/;"	i
docker	infra/docker/docker.py	/^import pulumi_docker as docker$/;"	i
docker	infra/kafka.py	/^import pulumi_docker as docker$/;"	i
docker	infra/monitoring/cluster.py	/^import pulumi_docker as docker$/;"	i
docker	infra/monitoring/operator.py	/^import pulumi_docker as docker$/;"	i
docker	infra/monitoring/thanos.py	/^import pulumi_docker as docker$/;"	i
docker	test/kafka/__init__.py	/^import pulumi_docker as docker$/;"	i
docker	test/kafkpers/__init__.py	/^import pulumi_docker as docker$/;"	i
docker	test/kafktick/__init__.py	/^import pulumi_docker as docker$/;"	i
docker	test/sensor/__init__.py	/^import pulumi_docker as docker$/;"	i
dockerfile	clients/ibroke/__init__.py	/^    dockerfile="Dockerfile",$/;"	v
dockerfile	clients/iqfeed/__init__.py	/^    dockerfile="Dockerfile",$/;"	v
downloadFile	get_helm.sh	/^downloadFile() {$/;"	f
draw_if_interactive	notebooks/q/kxpy/kx_backend_inline.py	/^def draw_if_interactive():$/;"	f
dtn_login	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^dtn_login = os.environ["IQFEED_LOGIN"]$/;"	v
dtn_password	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^dtn_password = os.environ["IQFEED_PASSWORD"]$/;"	v
dtn_product_id	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^dtn_product_id = os.environ["IQFEED_PRODUCT_ID"]$/;"	v
e	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	union:k0::__anon5
e	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	union:k0::__anon2
eConnect	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^bool EPosixClientSocket::eConnect( const char *host, unsigned int port, int clientId, bool extraAuth)$/;"	f	class:EPosixClientSocket
eConnectBase	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::eConnectBase()$/;"	f	class:EClientSocketBase
eDisconnect	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^void EPosixClientSocket::eDisconnect()$/;"	f	class:EPosixClientSocket
eDisconnectBase	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::eDisconnectBase()$/;"	f	class:EClientSocketBase
eTradeOnly	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     eTradeOnly;$/;"	m	struct:Order
eclient_def	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClient.h	5;"	d
eclientsocketbase_h__INCLUDED	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	5;"	d
eclientsocketbaseimpl_h__INCLUDED	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	5;"	d
eposixclientsocket_def	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.h	5;"	d
eposixclientsocketcommon_def	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocketPlatform.h	5;"	d
equityWithLoan	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	/^	IBString equityWithLoan;$/;"	m	struct:OrderState
errMsg	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^static IBString errMsg(CException *e) {$/;"	f
errMsg	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^static IBString errMsg(std::exception e) {$/;"	f
error	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::error(const int id, const int errorCode, const IBString errorString)$/;"	f	class:IBClient
evMultiplier	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	double		evMultiplier;$/;"	m	struct:ContractDetails
evMultiplier	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	double		evMultiplier;$/;"	m	struct:Execution
evRule	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	evRule;$/;"	m	struct:ContractDetails
evRule	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	evRule;$/;"	m	struct:Execution
eventLoop	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K eventLoop(I fd)$/;"	f
ewrapper_def	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	5;"	d
exchange	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	exchange;$/;"	m	struct:ComboLeg
exchange	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	exchange;$/;"	m	struct:Contract
exchange	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	exchange;$/;"	m	struct:Execution
excludeConvertible	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    int excludeConvertible;$/;"	m	struct:ScannerSubscription
execDetails	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::execDetails(int reqId, const Contract &contract, const Execution &execution)$/;"	f	class:IBClient
execDetailsEnd	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::execDetailsEnd(int reqId)$/;"	f	class:IBClient
execId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommissionReport.h	/^	IBString	execId;$/;"	m	struct:CommissionReport
execId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	execId;$/;"	m	struct:Execution
execution_def	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	5;"	d
exemptCode	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	int			exemptCode;$/;"	m	struct:ComboLeg
exemptCode	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      exemptCode;$/;"	m	struct:Order
exerciseOptions	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::exerciseOptions(TickerId tickerId, const Contract &contract, int exerciseAction, int exerciseQuantity, const IBString &account, int override)$/;"	f	class:IBClient
exerciseOptions	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K exerciseOptions(K tickerId, K contract, K exerciseAction, K exerciseQuantity, K account, K override)$/;"	f
exerciseOptions	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::exerciseOptions( TickerId tickerId, const Contract &contract,$/;"	f	class:EClientSocketBase
expiry	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	expiry;$/;"	m	struct:Contract
export	clients/core.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
export	infra/monitoring/cluster.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
export	infra/monitoring/operator.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
export	infra/monitoring/thanos.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
export	test/kafkpers/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
export	test/kafktick/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
export	test/sensor/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
f	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^auto f = [](auto property, I expectedType, K x, I index, std::string &error) {$/;"	v
f	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	union:k0::__anon5
f	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	union:k0::__anon2
faDataType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommonDefs.h	/^enum faDataType { GROUPS=1, PROFILES, ALIASES } ;$/;"	g
faDataTypeStr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommonDefs.h	/^inline const char* faDataTypeStr ( faDataType pFaDataType )$/;"	f
faGroup	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString faGroup;$/;"	m	struct:Order
faMethod	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString faMethod;$/;"	m	struct:Order
faPercentage	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString faPercentage;$/;"	m	struct:Order
faProfile	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString faProfile;$/;"	m	struct:Order
fail_trap	get_helm.sh	/^fail_trap() {$/;"	f
fd	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^int IBClient::fd() const$/;"	f	class:IBClient
fd	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^int EPosixClientSocket::fd() const$/;"	f	class:EPosixClientSocket
feed_has_error	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def feed_has_error(self) -> None:$/;"	m	class:CustomVerboseIQFeedListener
feed_is_fresh	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def feed_is_fresh(self) -> None:$/;"	m	class:CustomVerboseIQFeedListener
feed_is_stale	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def feed_is_stale(self) -> None:$/;"	m	class:CustomVerboseIQFeedListener
filemode	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^                    filemode='w',$/;"	v
files	clients/binance/__init__.py	/^    files = [$/;"	v
files	clients/bitmex/__init__.py	/^    files=[],$/;"	v
finite	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	86;"	d
firmQuoteOnly	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     firmQuoteOnly;$/;"	m	struct:Order
flush_figures	notebooks/q/kxpy/kx_backend_inline.py	/^def flush_figures():$/;"	f
format	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^                    format='%(asctime)s %(message)s')$/;"	v
formatTime	clients/ibroke/QInteractiveBrokers/src/helpers.h	/^static std::string formatTime(const char *str, time_t time, int adjusted)$/;"	f
formatter	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^formatter = logging.Formatter($/;"	v
forward	core/model/model.cpp	/^				K forward(K obs) {$/;"	f
forward_	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   mutable const Use *forward_;$/;"	m	class:shared_ptr_defs::Use
fundamentalData	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::fundamentalData(TickerId reqId, const IBString &data)$/;"	f	class:IBClient
g	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	union:k0::__anon5
g	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	union:k0::__anon2
g	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct{G g[16];}U;$/;"	m	struct:__anon4
gcp	core/__init__.py	/^import pulumi_gcp as gcp$/;"	i
gcp	infra/kafka.py	/^import pulumi_gcp as gcp$/;"	i
gcp	infra/monitoring/cluster.py	/^import pulumi_gcp as gcp$/;"	i
gcp	infra/monitoring/operator.py	/^import pulumi_gcp as gcp$/;"	i
gcp	infra/monitoring/thanos.py	/^import pulumi_gcp as gcp$/;"	i
gcp	test/kafka/__init__.py	/^import pulumi_gcp as gcp$/;"	i
gcp	test/kafkpers/__init__.py	/^import pulumi_gcp as gcp$/;"	i
gcp	test/kafktick/__init__.py	/^import pulumi_gcp as gcp$/;"	i
gcp	test/sensor/__init__.py	/^import pulumi_gcp as gcp$/;"	i
get	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   X* get()        const { return ptr_; }$/;"	f	class:shared_ptr
getString	clients/ibroke/QInteractiveBrokers/src/helpers.h	/^static std::string getString(K x)$/;"	f
getWrapper	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^EWrapper * EClientSocketBase::getWrapper() const$/;"	f	class:EClientSocketBase
get_ipython	notebooks/q/kxpy/kx_backend_inline.py	/^def get_ipython():$/;"	f
get_project	clients/core.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_project	infra/monitoring/cluster.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_project	infra/monitoring/operator.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_project	infra/monitoring/thanos.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_project	test/kafkpers/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_project	test/kafktick/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_project	test/sensor/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_stack	clients/core.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_stack	infra/monitoring/cluster.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_stack	infra/monitoring/cluster.py	/^from pulumi import get_stack, ResourceOptions, StackReference$/;"	i
get_stack	infra/monitoring/operator.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_stack	infra/monitoring/operator.py	/^from pulumi import get_stack, ResourceOptions, StackReference$/;"	i
get_stack	infra/monitoring/thanos.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_stack	infra/monitoring/thanos.py	/^from pulumi import get_stack, ResourceOptions, StackReference$/;"	i
get_stack	test/kafkpers/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_stack	test/kafktick/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
get_stack	test/sensor/__init__.py	/^from pulumi import Config, export, get_project, get_stack, Output, ResourceOptions$/;"	i
goodAfterTime	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString goodAfterTime;    \/\/ Format: 20060505 08:00:00 {time zone}$/;"	m	struct:Order
goodTillDate	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString goodTillDate;     \/\/ Format: 20060505 08:00:00 {time zone}$/;"	m	struct:Order
h	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	union:k0::__anon5
h	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	union:k0::__anon2
handleSocketError	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^bool EPosixClientSocket::handleSocketError()$/;"	f	class:EPosixClientSocket
handle_close	notebooks/q/kxpy/kx_comm.py	/^    def handle_close(self, msg):$/;"	m	class:Comm
handle_msg	notebooks/q/kxpy/kx_comm.py	/^    def handle_msg(self, msg):$/;"	m	class:Comm
hasGaps	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	IBString hasGaps;$/;"	m	struct:__anon1::BarData
headless	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^    headless = arguments.headless$/;"	v
hedgeParam	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString hedgeParam; \/\/ 'beta=X' value for beta hedge, 'ratio=Y' for pair hedge$/;"	m	struct:Order
hedgeType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString hedgeType;  \/\/ 'D' - delta, 'B' - beta, 'F' - FX, 'P' - pair$/;"	m	struct:Order
help	get_helm.sh	/^help () {$/;"	f
hidden	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     hidden;$/;"	m	struct:Order
high	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	double high;$/;"	m	struct:__anon1::BarData
historicalData	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::historicalData(TickerId reqId, const IBString &date, double open, double high, double low, double close, int volume, int barCount, double WAP, int hasGaps)$/;"	f	class:IBClient
i	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	union:k0::__anon5
i	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	union:k0::__anon2
ib	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^IBClient *ib;$/;"	v
ibstring_h__INCLUDED	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/IBString.h	5;"	d
identity	clients/ibroke/QInteractiveBrokers/src/helpers.h	/^Z K identity()$/;"	f
includeExpired	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	bool		includeExpired;$/;"	m	struct:Contract
industry	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	industry;$/;"	m	struct:ContractDetails
init	core/model/model.cpp	/^				K init(K pth) {$/;"	f
initArch	get_helm.sh	/^initArch() {$/;"	f
initMargin	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	/^	IBString initMargin;$/;"	m	struct:OrderState
initOS	get_helm.sh	/^initOS() {$/;"	f
initialise	notebooks/q/kxpy/kx_backend_inline.py	/^def initialise(qpubfunc,qcommfunc,qclearfunc,qipythonfunc):$/;"	f
initialize_api	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^ZV initialize_api() {$/;"	f
inject_prometheus	infra/monitoring/cluster.py	/^    def inject_prometheus(self, label, k8s_provider):$/;"	m	class:MonitoringCluster
insert	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   void insert(const Use& u) const {$/;"	f	class:shared_ptr_defs::Use
installFile	get_helm.sh	/^installFile() {$/;"	f
instrument	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    IBString instrument;$/;"	m	struct:ScannerSubscription
iq	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^import pyiqfeed as iq$/;"	i
iq	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^import pyiqfeed as iq$/;"	i
isConnected	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^bool IBClient::isConnected() const$/;"	f	class:IBClient
isConnected	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K isConnected(K ignore)$/;"	f
isConnected	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::isConnected() const$/;"	f	class:EClientSocketBase
isInBufferEmpty	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::isInBufferEmpty() const$/;"	f	class:EClientSocketBase
isOutBufferEmpty	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^bool EClientSocketBase::isOutBufferEmpty() const$/;"	f	class:EClientSocketBase
isPrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^inline bool isPrice( TickType tickType) {$/;"	f
isSocketOK	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^bool EPosixClientSocket::isSocketOK() const$/;"	f	class:EPosixClientSocket
isnan	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	85;"	d
issueDate	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	issueDate;$/;"	m	struct:ContractDetails
j	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	union:k0::__anon5
j	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	union:k0::__anon2
json	infra/monitoring/cluster.py	/^import json$/;"	i
json	infra/monitoring/operator.py	/^import json$/;"	i
json	infra/monitoring/thanos.py	/^import json$/;"	i
json_clean	notebooks/q/kxpy/kx_comm.py	/^from ipykernel.jsonutil import json_clean$/;"	i
k	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	union:k0::__anon5	typeref:struct:k0::__anon5::k0
k	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	union:k0::__anon2	typeref:struct:k0::__anon2::k0
k0	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	s
k0	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	s
k8s	core/__init__.py	/^import pulumi_kubernetes as k8s$/;"	i
k8s	infra/kafka.py	/^import pulumi_kubernetes as k8s$/;"	i
k8s	infra/monitoring/cluster.py	/^import pulumi_kubernetes as k8s$/;"	i
k8s	infra/monitoring/operator.py	/^import pulumi_kubernetes as k8s$/;"	i
k8s	infra/monitoring/thanos.py	/^import pulumi_kubernetes as k8s$/;"	i
k8s	test/kafka/__init__.py	/^import pulumi_kubernetes as k8s$/;"	i
k8s	test/kafkpers/__init__.py	/^import pulumi_kubernetes as k8s$/;"	i
k8s	test/kafktick/__init__.py	/^import pulumi_kubernetes as k8s$/;"	i
k8s	test/sensor/__init__.py	/^import pulumi_kubernetes as k8s$/;"	i
kC	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	29;"	d
kE	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	33;"	d
kF	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	34;"	d
kG	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	28;"	d
kH	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	30;"	d
kI	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	31;"	d
kJ	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	32;"	d
kK	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	36;"	d
kS	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	35;"	d
kU	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	13;"	d
kafka_operator	__main__.py	/^      kafka_operator=kafka_operator,$/;"	v
kafka_operator	__main__.py	/^kafka_operator = StrimziKafkaOperator(k8s_provider=None)$/;"	v
kernel	notebooks/q/kxpy/kx_comm.py	/^    kernel = True$/;"	v	class:Comm
kind	clients/binance/__init__.py	/^    kind="",$/;"	v
kind	clients/ibroke/__init__.py	/^    kind=ClientType.SENSOR,$/;"	v
kind	clients/iqfeed/__init__.py	/^    kind=ClientType.SENSOR,$/;"	v
kip	clients/ibroke/QInteractiveBrokers/src/helpers.h	12;"	d
kis	clients/ibroke/QInteractiveBrokers/src/helpers.h	13;"	d
kts	clients/ibroke/QInteractiveBrokers/src/helpers.h	14;"	d
launch	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^    def launch(self,$/;"	m	class:CustomFeedService
legsStr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	IBString legsStr;$/;"	m	struct:__anon1::ScanData
level	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^                    level=logging.DEBUG,$/;"	v
liquidHours	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	liquidHours;$/;"	m	struct:ContractDetails
liquidation	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	int			liquidation;$/;"	m	struct:Execution
lmtPrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   lmtPrice;$/;"	m	struct:Order
localSymbol	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	localSymbol;$/;"	m	struct:Contract
locationCode	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    IBString locationCode;$/;"	m	struct:ScannerSubscription
log_filename	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^log_filename = "\/root\/DTN\/IQFeed\/pyiqfeed-admin-conn.log"$/;"	v
logging	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^import logging$/;"	i
logging	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^import logging$/;"	i
login	clients/iqfeed/docker-iqfeed/app/proxy.js	/^	login: process.env.IQFEED_LOGIN,$/;"	p	class:config
login	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^	login: process.env.IQFEED_LOGIN,$/;"	p	class:config
longName	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	longName;$/;"	m	struct:ContractDetails
loop	test/kafka/consumer.py	/^loop = asyncio.get_event_loop()$/;"	v
loop	test/kafka/producer.py	/^loop = asyncio.get_event_loop()$/;"	v
low	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	double low;$/;"	m	struct:__anon1::BarData
m	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	struct:k0
m_TwsTime	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	/^	IBString m_TwsTime;$/;"	m	class:EClientSocketBase
m_acctCode	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	m_acctCode;$/;"	m	struct:ExecutionFilter
m_clientId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	/^	int m_clientId;$/;"	m	class:EClientSocketBase
m_clientId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	long		m_clientId;$/;"	m	struct:ExecutionFilter
m_connected	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	/^	bool m_connected;$/;"	m	class:EClientSocketBase
m_errorCode	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TwsSocketClientErrors.h	/^	int m_errorCode;$/;"	m	class:CodeMsgPair
m_errorMsg	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TwsSocketClientErrors.h	/^	IBString m_errorMsg;$/;"	m	class:CodeMsgPair
m_exchange	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	m_exchange;$/;"	m	struct:ExecutionFilter
m_extraAuth	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	/^	bool m_extraAuth;$/;"	m	class:EClientSocketBase
m_fd	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.h	/^	int m_fd;$/;"	m	class:EPosixClientSocket
m_inBuffer	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	/^	BytesVec m_inBuffer;$/;"	m	class:EClientSocketBase
m_outBuffer	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	/^	BytesVec m_outBuffer;$/;"	m	class:EClientSocketBase
m_pEWrapper	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	/^	EWrapper *m_pEWrapper;$/;"	m	class:EClientSocketBase
m_secType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	m_secType;$/;"	m	struct:ExecutionFilter
m_serverVersion	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBase.h	/^	int m_serverVersion;$/;"	m	class:EClientSocketBase
m_side	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	m_side;$/;"	m	struct:ExecutionFilter
m_symbol	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	m_symbol;$/;"	m	struct:ExecutionFilter
m_time	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	m_time;$/;"	m	struct:ExecutionFilter
main	clients/iqfeed/docker-iqfeed/is_iqfeed_running.py	/^def main():$/;"	f
maintMargin	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	/^	IBString maintMargin;$/;"	m	struct:OrderState
managedAccounts	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::managedAccounts(const IBString &accountsList)$/;"	f	class:IBClient
marketCapAbove	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    double marketCapAbove;$/;"	m	struct:ScannerSubscription
marketCapBelow	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    double marketCapBelow;$/;"	m	struct:ScannerSubscription
marketDataType	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::marketDataType(TickerId reqId, int marketDataType)$/;"	f	class:IBClient
marketName	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	marketName;$/;"	m	struct:ContractDetails
matplotlib	notebooks/q/kxpy/kx_backend_inline.py	/^  import matplotlib.pyplot as plt$/;"	i
matplotlib	notebooks/q/kxpy/kx_backend_inline.py	/^import matplotlib$/;"	i
maturity	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	maturity;$/;"	m	struct:ContractDetails
maturityDateAbove	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    IBString maturityDateAbove;$/;"	m	struct:ScannerSubscription
maturityDateBelow	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    IBString maturityDateBelow;$/;"	m	struct:ScannerSubscription
maxCommission	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	/^	double  maxCommission;$/;"	m	struct:OrderState
minCommission	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	/^	double  minCommission;$/;"	m	struct:OrderState
minQty	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      minQty;$/;"	m	struct:Order
minTick	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	double		minTick;$/;"	m	struct:ContractDetails
monitoring_operator	__main__.py	/^      monitoring_operator=monitoring_operator$/;"	v
moodyRatingAbove	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    IBString moodyRatingAbove;$/;"	m	struct:ScannerSubscription
moodyRatingBelow	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    IBString moodyRatingBelow;$/;"	m	struct:ScannerSubscription
msg	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TwsSocketClientErrors.h	/^	const IBString& msg() const			{ return m_errorMsg;  }$/;"	f	class:CodeMsgPair
multiplier	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	multiplier;$/;"	m	struct:Contract
n	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	struct:k0::__anon5::__anon6
n	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	struct:k0::__anon2::__anon3
name	__main__.py	/^      name="canary",$/;"	v
name	clients/binance/__init__.py	/^    name='BinanceFuturesAuthWssSensor',$/;"	v
name	clients/binance/__init__.py	/^    name='BinanceFuturesCronSensor',$/;"	v
name	clients/binance/__init__.py	/^    name='BinanceFuturesWssSensor',$/;"	v
name	clients/binance/__init__.py	/^    name='BinanceWssSensor',$/;"	v
name	clients/bitmex/__init__.py	/^    name='BitmexAuthRestEffector',$/;"	v
name	clients/bitmex/__init__.py	/^    name='BitmexAuthWssSensor',$/;"	v
name	clients/bitmex/__init__.py	/^    name='BitmexWssSensor',$/;"	v
name	clients/ibroke/__init__.py	/^    name='InteractiveBrokersSensor',$/;"	v
name	clients/iqfeed/__init__.py	/^    name='IQFeedSensor',$/;"	v
namedtuple	notebooks/q/kxpy/kx_backend_inline.py	/^from collections import namedtuple$/;"	i
nbboPriceCap	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   nbboPriceCap;$/;"	m	struct:Order
net	clients/iqfeed/docker-iqfeed/app/proxy.js	/^	net = require('net'),$/;"	v
net	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^	net = require('net'),$/;"	v
new	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	8;"	d	file:
new_figure_manager	notebooks/q/kxpy/kx_backend_inline.py	/^from matplotlib.backends.backend_agg import new_figure_manager, FigureCanvasAgg # analysis: ignore$/;"	i
nextOptionDate	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	nextOptionDate;$/;"	m	struct:ContractDetails
nextOptionPartial	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	bool		nextOptionPartial;$/;"	m	struct:ContractDetails
nextOptionType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	nextOptionType;$/;"	m	struct:ContractDetails
nextValidId	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::nextValidId(OrderId orderId)$/;"	f	class:IBClient
nf	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	83;"	d
nf	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	89;"	d
nh	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	76;"	d
ni	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	78;"	d
nj	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	80;"	d
nohup	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^    nohup = arguments.nohup$/;"	v
notHeld	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     notHeld;$/;"	m	struct:Order
notes	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	notes;$/;"	m	struct:ContractDetails
numberOfRows	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    int numberOfRows;$/;"	m	struct:ScannerSubscription
ocaGroup	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString ocaGroup;      \/\/ one cancels all group name$/;"	m	struct:Order
ocaType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      ocaType;       \/\/ 1 = CANCEL_WITH_BLOCK, 2 = REDUCE_WITH_BLOCK, 3 = REDUCE_NON_BLOCK$/;"	m	struct:Order
onClose	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^void EPosixClientSocket::onClose()$/;"	f	class:EPosixClientSocket
onConnect	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^void EPosixClientSocket::onConnect()$/;"	f	class:EPosixClientSocket
onConnectBase	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::onConnectBase()$/;"	f	class:EClientSocketBase
onError	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^void EPosixClientSocket::onError()$/;"	f	class:EPosixClientSocket
onReceive	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::onReceive()$/;"	f	class:IBClient
onReceive	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^void EPosixClientSocket::onReceive()$/;"	f	class:EPosixClientSocket
onSend	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^void EPosixClientSocket::onSend()$/;"	f	class:EPosixClientSocket
on_close	notebooks/q/kxpy/kx_comm.py	/^    def on_close(self, callback):$/;"	m	class:Comm
on_msg	notebooks/q/kxpy/kx_comm.py	/^    def on_msg(self, callback):$/;"	m	class:Comm
only	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   bool only() const { return this == this->forward_; }$/;"	f	class:shared_ptr_defs::Use
only	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   bool only() const { return use_.only(); }$/;"	f	class:shared_ptr
open	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	double open;$/;"	m	struct:__anon1::BarData
open	notebooks/q/kxpy/kx_comm.py	/^    def open(self, data=None, metadata=None, buffers=None):$/;"	m	class:Comm
openClose	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	long		openClose; \/\/ LegOpenClose enum values$/;"	m	struct:ComboLeg
openClose	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString openClose; \/\/ O=Open, C=Close$/;"	m	struct:Order
openOrder	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::openOrder(OrderId orderId, const Contract &contract, const Order &order, const OrderState &orderState)$/;"	f	class:IBClient
openOrderEnd	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::openOrderEnd()$/;"	f	class:IBClient
operator *	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   X& operator*()  const { return *ptr_; }$/;"	f	class:shared_ptr
operator ->	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   X* operator->() const { return ptr_; }$/;"	f	class:shared_ptr
operator =	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   Use& operator=(const Use& u)$/;"	f	class:shared_ptr_defs::Use
operator =	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   shared_ptr& operator=(const shared_ptr& other) {$/;"	f	class:shared_ptr
operator ==	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	bool operator==( const ComboLeg &other) const$/;"	f	struct:ComboLeg
operator ==	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool operator==( const OrderComboLeg &other) const$/;"	f	struct:OrderComboLeg
optOutSmartRouting	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     optOutSmartRouting;$/;"	m	struct:Order
orderComboLegs	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	OrderComboLegListSPtr orderComboLegs;$/;"	m	struct:Order
orderId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	long		orderId;$/;"	m	struct:Execution
orderId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	long     orderId;$/;"	m	struct:Order
orderMiscOptions	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	TagValueListSPtr orderMiscOptions;$/;"	m	struct:Order
orderRef	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	orderRef;$/;"	m	struct:Execution
orderRef	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString orderRef;      \/\/ order reference$/;"	m	struct:Order
orderStatus	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::orderStatus(OrderId orderId, const IBString &status, int filled, int remaining, double avgFillPrice, int permId, int parentId, double lastFillPrice, int clientId, const IBString &whyHeld)$/;"	f	class:IBClient
orderType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString orderType;$/;"	m	struct:Order
orderTypes	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	orderTypes;$/;"	m	struct:ContractDetails
order_def	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	5;"	d
origin	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	Origin   origin;    \/\/ 0=Customer, 1=Firm$/;"	m	struct:Order
os	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^import os$/;"	i
os	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^import os$/;"	i
os	core/__init__.py	/^import os$/;"	i
os	infra/docker/docker.py	/^import os$/;"	i
os	infra/filegen.py	/^import os$/;"	i
os	test/kafka/__init__.py	/^import os$/;"	i
os	test/kafka/consumer.py	/^import os$/;"	i
os	test/kafka/producer.py	/^import os$/;"	i
os	test/kafkpers/__init__.py	/^import os$/;"	i
os	test/kafktick/__init__.py	/^import os$/;"	i
os	test/sensor/__init__.py	/^import os$/;"	i
outsideRth	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     outsideRth;$/;"	m	struct:Order
overridePercentageConstraints	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     overridePercentageConstraints;$/;"	m	struct:Order
parentId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	long     parentId;      \/\/ Parent order Id, to associate Auto STP or TRAIL orders with the original order.$/;"	m	struct:Order
parser	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^    parser = argparse.ArgumentParser(description="Launch IQFeed.")$/;"	v
partial	clients/ibroke/QInteractiveBrokers/src/helpers.h	/^auto partial(F&&f, A0&&a0, Args&&...args)$/;"	f
partial	clients/ibroke/QInteractiveBrokers/src/helpers.h	/^auto partial(F&&f, V&&v)$/;"	f
password	clients/iqfeed/docker-iqfeed/app/proxy.js	/^	password: process.env.IQFEED_PASSWORD$/;"	p	class:config
password	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^	password: process.env.IQFEED_PASSWORD$/;"	p	class:config
pathlib	infra/docker/docker.py	/^import pathlib$/;"	i
pathlib	infra/filegen.py	/^import pathlib$/;"	i
pattern1	clients/iqfeed/docker-iqfeed/is_iqfeed_running.py	/^pattern1 = re.compile(r'wine: Unhandled')$/;"	v
pattern2	clients/iqfeed/docker-iqfeed/is_iqfeed_running.py	/^pattern2 = re.compile(r'error 5')$/;"	v
pattern3	clients/iqfeed/docker-iqfeed/is_iqfeed_running.py	/^pattern3 = re.compile(r'iqfeed service not running.')$/;"	v
percentOffset	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   percentOffset; \/\/ REL orders only$/;"	m	struct:Order
permId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	int			permId;$/;"	m	struct:Execution
permId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	long     permId;$/;"	m	struct:Order
placeOrder	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::placeOrder(OrderId id, const Contract &contract, const Order &order)$/;"	f	class:IBClient
placeOrder	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K placeOrder(K id, K contract, K order)$/;"	f
placeOrder	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::placeOrder( OrderId id, const Contract &contract, const Order &order)$/;"	f	class:EClientSocketBase
plt	notebooks/q/kxpy/kx_backend_inline.py	/^  import matplotlib.pyplot as plt$/;"	i
portMap	clients/iqfeed/docker-iqfeed/app/proxy.js	/^var portMap = {$/;"	c
portMap	clients/iqfeed/docker-iqfeed/minimal-iqfeed/app/proxy.js	/^var portMap = {$/;"	c
position	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::position(const IBString &account, const Contract &contract, int position, double avgCost)$/;"	f	class:IBClient
positionEnd	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::positionEnd()$/;"	f	class:IBClient
prand	test/kafkpers/__init__.py	/^import pulumi_random as prand$/;"	i
prand	test/kafktick/__init__.py	/^import pulumi_random as prand$/;"	i
prand	test/sensor/__init__.py	/^import pulumi_random as prand$/;"	i
price	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	double	price;$/;"	m	struct:UnderComp
price	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	double		price;$/;"	m	struct:Execution
price	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double price;$/;"	m	struct:OrderComboLeg
priceMagnifier	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	long		priceMagnifier;$/;"	m	struct:ContractDetails
primary	notebooks/q/kxpy/kx_comm.py	/^    primary = Bool(True, help="Am I the primary or secondary Comm?")$/;"	v	class:Comm
primaryExchange	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	primaryExchange; \/\/ pick an actual (ie non-aggregate) exchange that the contract trades on.  DO NOT SET TO SMART.$/;"	m	struct:Contract
print_function	notebooks/q/kxpy/kx_backend_inline.py	/^from __future__ import print_function$/;"	i
processConnectAck	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^int EClientSocketBase::processConnectAck(const char*& beginPtr, const char* endPtr)$/;"	f	class:EClientSocketBase
processMsg	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^int EClientSocketBase::processMsg(const char*& beginPtr, const char* endPtr)$/;"	f	class:EClientSocketBase
process_autoconnect_off	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def process_autoconnect_off(self) -> None:$/;"	m	class:CustomVerboseIQFeedAdminListener
process_autoconnect_on	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def process_autoconnect_on(self) -> None:$/;"	m	class:CustomVerboseIQFeedAdminListener
process_client_stats	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def process_client_stats(self,client_stats: iq.AdminConn.ClientStatsMsg) -> None:$/;"	m	class:CustomVerboseIQFeedAdminListener
process_conn_stats	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^    def process_conn_stats(self, stats: iq.FeedConn.ConnStatsMsg) -> None:$/;"	m	class:CustomVerboseIQFeedListener
process_conn_stats	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def process_conn_stats(self, stats: iq.FeedConn.ConnStatsMsg) -> None:$/;"	m	class:CustomVerboseIQFeedListener
process_current_login	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def process_current_login(self, login: str) -> None:$/;"	m	class:CustomVerboseIQFeedAdminListener
process_current_password	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def process_current_password(self, password: str) -> None:$/;"	m	class:CustomVerboseIQFeedAdminListener
process_error	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def process_error(self, fields):$/;"	m	class:CustomVerboseIQFeedListener
process_login_info_saved	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def process_login_info_saved(self) -> None:$/;"	m	class:CustomVerboseIQFeedAdminListener
process_register_client_app_completed	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def process_register_client_app_completed(self) -> None:$/;"	m	class:CustomVerboseIQFeedAdminListener
process_remove_client_app_completed	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def process_remove_client_app_completed(self) -> None:$/;"	m	class:CustomVerboseIQFeedAdminListener
process_timestamp	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^    def process_timestamp(self, time_val: iq.FeedConn.TimeStampMsg):$/;"	m	class:CustomVerboseIQFeedListener
projection	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	IBString projection;$/;"	m	struct:__anon1::ScanData
ptr_	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   X *ptr_;$/;"	m	class:shared_ptr
pu	clients/ibroke/QInteractiveBrokers/src/helpers.h	/^inline J pu(I u) { return 8.64e13 * (u \/ 8.64e4 - 10957); } \/\/ kdb+ timestamp from unix$/;"	f
pulumi	__main__.py	/^import pulumi$/;"	i
pulumi	clients/core.py	/^import pulumi$/;"	i
pulumi	core/__init__.py	/^import pulumi$/;"	i
pulumi	infra/docker/docker.py	/^import pulumi$/;"	i
pulumi	infra/kafka.py	/^import pulumi$/;"	i
pulumi	infra/monitoring/cluster.py	/^import pulumi$/;"	i
pulumi	infra/monitoring/operator.py	/^import pulumi$/;"	i
pulumi	infra/monitoring/thanos.py	/^import pulumi$/;"	i
pulumi	test/kafka/__init__.py	/^import pulumi$/;"	i
pulumi	test/kafkpers/__init__.py	/^import pulumi$/;"	i
pulumi	test/kafktick/__init__.py	/^import pulumi$/;"	i
pulumi	test/sensor/__init__.py	/^import pulumi$/;"	i
putable	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	bool		putable;$/;"	m	struct:ContractDetails
pyiqfeed_admin_conn_log_filename	clients/iqfeed/docker-iqfeed/is_iqfeed_running.py	/^pyiqfeed_admin_conn_log_filename = "\/root\/DTN\/IQFeed\/pyiqfeed-admin-conn.log"$/;"	v
qclearcallback	notebooks/q/kxpy/kx_backend_inline.py	/^qclearcallback=None$/;"	v
qfunc	notebooks/q/kxpy/kx_comm.py	/^    qfunc=None $/;"	v	class:Comm
qib_h	clients/ibroke/QInteractiveBrokers/src/qib.h	2;"	d
qipythoncallback	notebooks/q/kxpy/kx_backend_inline.py	/^qipythoncallback=None$/;"	v
qpub	notebooks/q/kxpy/kx_backend_inline.py	/^def qpub(data,metadata={},**kwargs):$/;"	f
qpubcallback	notebooks/q/kxpy/kx_backend_inline.py	/^qpubcallback=None$/;"	v
qsend	notebooks/q/kxpy/kx_comm.py	/^    def qsend(self,msg_type,content,metadata,buffers):$/;"	m	class:Comm
qshell	notebooks/q/kxpy/kx_backend_inline.py	/^class qshell():$/;"	c
queryDisplayGroups	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::queryDisplayGroups(int reqId)$/;"	f	class:IBClient
queryDisplayGroups	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K queryDisplayGroups(K reqId)$/;"	f
queryDisplayGroups	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::queryDisplayGroups( int reqId)$/;"	f	class:EClientSocketBase
r	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	struct:k0
r	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	struct:k0
rank	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	int rank;$/;"	m	struct:__anon1::ScanData
ratings	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	ratings;$/;"	m	struct:ContractDetails
ratio	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	long		ratio;$/;"	m	struct:ComboLeg
rc	notebooks/q/kxpy/kx_backend_inline.py	/^  from matplotlib import rc$/;"	i
re	clients/iqfeed/docker-iqfeed/is_iqfeed_running.py	/^import re$/;"	i
realizedPNL	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommissionReport.h	/^	double		realizedPNL;$/;"	m	struct:CommissionReport
realtimeBar	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::realtimeBar(TickerId reqId, long time, double open, double high, double low, double close, long volume, double wap, int count)$/;"	f	class:IBClient
receive	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^int EPosixClientSocket::receive(char* buf, size_t sz)$/;"	f	class:EPosixClientSocket
receiveData	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::receiveData(const char *fun, K x)$/;"	f	class:IBClient
receiveFA	clients/ibroke/QInteractiveBrokers/src/IBClient.h	/^    void receiveFA(faDataType pFaDataType, const IBString& cxml) {};$/;"	f	class:IBClient
referencePriceType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      referencePriceType; \/\/ 1=Average, 2 = BidOrAsk$/;"	m	struct:Order
remove	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   void remove() const {$/;"	f	class:shared_ptr_defs::Use
replaceFA	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::replaceFA(faDataType pFaDataType, const IBString& cxml)$/;"	f	class:IBClient
replaceFA	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K replaceFA(K pFaDataType, K cxml)$/;"	f
replaceFA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::replaceFA(faDataType pFaDataType, const IBString& cxml)$/;"	f	class:EClientSocketBase
reqAccountSummary	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqAccountSummary(int reqId, const IBString& groupName, const IBString& tags)$/;"	f	class:IBClient
reqAccountSummary	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqAccountSummary(K reqId, K groupName, K tags)$/;"	f
reqAccountSummary	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqAccountSummary( int reqId, const IBString& groupName, const IBString& tags)$/;"	f	class:EClientSocketBase
reqAccountUpdates	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqAccountUpdates(bool subscribe, const IBString& acctCode)$/;"	f	class:IBClient
reqAccountUpdates	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqAccountUpdates(K subscribe, K acctCode)$/;"	f
reqAccountUpdates	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqAccountUpdates(bool subscribe, const IBString& acctCode)$/;"	f	class:EClientSocketBase
reqAllOpenOrders	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqAllOpenOrders()$/;"	f	class:IBClient
reqAllOpenOrders	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqAllOpenOrders(K ignore)$/;"	f
reqAllOpenOrders	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqAllOpenOrders()$/;"	f	class:EClientSocketBase
reqAutoOpenOrders	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqAutoOpenOrders(bool bAutoBind)$/;"	f	class:IBClient
reqAutoOpenOrders	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqAutoOpenOrders(K bAutoBind)$/;"	f
reqAutoOpenOrders	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqAutoOpenOrders(bool bAutoBind)$/;"	f	class:EClientSocketBase
reqContractDetails	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqContractDetails(int reqId, const Contract &contract)$/;"	f	class:IBClient
reqContractDetails	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqContractDetails(K reqId, K contract)$/;"	f
reqContractDetails	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqContractDetails( int reqId, const Contract& contract)$/;"	f	class:EClientSocketBase
reqCurrentTime	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqCurrentTime()$/;"	f	class:IBClient
reqCurrentTime	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqCurrentTime(K ignore)$/;"	f
reqCurrentTime	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqCurrentTime()$/;"	f	class:EClientSocketBase
reqExecutions	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqExecutions(int reqId, const ExecutionFilter& filter)$/;"	f	class:IBClient
reqExecutions	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqExecutions(K reqId, K filter)$/;"	f
reqExecutions	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqExecutions(int reqId, const ExecutionFilter& filter)$/;"	f	class:EClientSocketBase
reqFundamentalData	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqFundamentalData(TickerId reqId, const Contract& contract, const IBString& reportType)$/;"	f	class:IBClient
reqFundamentalData	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqFundamentalData(K reqId, K contract, K reportType)$/;"	f
reqFundamentalData	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqFundamentalData(TickerId reqId, const Contract& contract, $/;"	f	class:EClientSocketBase
reqGlobalCancel	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqGlobalCancel()$/;"	f	class:IBClient
reqGlobalCancel	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqGlobalCancel(K ignore)$/;"	f
reqGlobalCancel	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqGlobalCancel()$/;"	f	class:EClientSocketBase
reqHistoricalData	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqHistoricalData(TickerId id, const Contract &contract, const IBString &endDateTime, const IBString &durationStr, const IBString &barSizeSetting, const IBString &whatToShow, int useRTH, int formatDate, const TagValueListSPtr &chartOptions)$/;"	f	class:IBClient
reqHistoricalData	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqHistoricalData(K id, K contract, K endDateTime, K durationStr, K barSizeSetting, K whatToShow, K useRTH)$/;"	f
reqHistoricalData	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqHistoricalData( TickerId tickerId, const Contract &contract,$/;"	f	class:EClientSocketBase
reqIds	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqIds(int numIds)$/;"	f	class:IBClient
reqIds	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqIds(K numIds)$/;"	f
reqIds	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqIds( int numIds)$/;"	f	class:EClientSocketBase
reqManagedAccts	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqManagedAccts()$/;"	f	class:IBClient
reqManagedAccts	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqManagedAccts(K ignore)$/;"	f
reqManagedAccts	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqManagedAccts()$/;"	f	class:EClientSocketBase
reqMarketDataType	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqMarketDataType(int marketDataType)$/;"	f	class:IBClient
reqMarketDataType	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqMarketDataType(K marketDataType)$/;"	f
reqMarketDataType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqMarketDataType( int marketDataType)$/;"	f	class:EClientSocketBase
reqMktData	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqMktData(TickerId id, const Contract &contract, const IBString &genericTicks, bool snapshot, const TagValueListSPtr &mktDataOptions)$/;"	f	class:IBClient
reqMktData	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqMktData(K tickerId, K contract, K genericTicks, K snapsnot)$/;"	f
reqMktData	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqMktData(TickerId tickerId, const Contract& contract,$/;"	f	class:EClientSocketBase
reqMktDepth	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqMktDepth(TickerId tickerId, const Contract &contract, int numRows, const TagValueListSPtr &mktDepthOptions)$/;"	f	class:IBClient
reqMktDepth	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqMktDepth(K tickerId, K contract, K numRows, K mktDepthOptions)$/;"	f
reqMktDepth	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqMktDepth( TickerId tickerId, const Contract &contract, int numRows, const TagValueListSPtr& mktDepthOptions)$/;"	f	class:EClientSocketBase
reqNewsBulletins	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqNewsBulletins(bool allMsgs)$/;"	f	class:IBClient
reqNewsBulletins	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqNewsBulletins(K allMsgs)$/;"	f
reqNewsBulletins	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqNewsBulletins(bool allMsgs)$/;"	f	class:EClientSocketBase
reqOpenOrders	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqOpenOrders()$/;"	f	class:IBClient
reqOpenOrders	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqOpenOrders(K ignore)$/;"	f
reqOpenOrders	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqOpenOrders()$/;"	f	class:EClientSocketBase
reqPositions	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqPositions()$/;"	f	class:IBClient
reqPositions	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqPositions(K ignore)$/;"	f
reqPositions	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqPositions()$/;"	f	class:EClientSocketBase
reqRealTimeBars	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqRealTimeBars(TickerId id, const Contract &contract, int barSize, const IBString &whatToShow, bool useRTH, const TagValueListSPtr &realTimeBarsOptions)$/;"	f	class:IBClient
reqRealTimeBars	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqRealTimeBars(K id, K contract, K barSize, K whatToShow, K useRTH, K realTimeBarsOptions)$/;"	f
reqRealTimeBars	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqRealTimeBars(TickerId tickerId, const Contract &contract,$/;"	f	class:EClientSocketBase
reqScannerParameters	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqScannerParameters()$/;"	f	class:IBClient
reqScannerParameters	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqScannerParameters(K ignore)$/;"	f
reqScannerParameters	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqScannerParameters()$/;"	f	class:EClientSocketBase
reqScannerSubscription	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::reqScannerSubscription(int tickerId, const ScannerSubscription &subscription, const TagValueListSPtr &scannerSubscriptionOptions)$/;"	f	class:IBClient
reqScannerSubscription	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K reqScannerSubscription(K tickerId, K subscription, K scannerSubscriptionOptions)$/;"	f
reqScannerSubscription	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::reqScannerSubscription(int tickerId,$/;"	f	class:EClientSocketBase
requestFA	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::requestFA(faDataType pFaDataType)$/;"	f	class:IBClient
requestFA	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K requestFA(K pFaDataType)$/;"	f
requestFA	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::requestFA(faDataType pFaDataType)$/;"	f	class:EClientSocketBase
reset	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   void reset(X* ptr = 0) {$/;"	f	class:shared_ptr
right	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	right;$/;"	m	struct:Contract
rule80A	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString rule80A; \/\/ Individual = 'I', Agency = 'A', AgentOtherMember = 'W', IndividualPTIA = 'J', AgencyPTIA = 'U', AgentOtherMemberPTIA = 'M', IndividualPT = 'K', AgencyPT = 'Y', AgentOtherMemberPT = 'N'$/;"	m	struct:Order
runAsRoot	get_helm.sh	/^runAsRoot() {$/;"	f
s	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	union:k0::__anon5
s	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	union:k0::__anon2
scaleAutoReset	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     scaleAutoReset;$/;"	m	struct:Order
scaleInitFillQty	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      scaleInitFillQty;$/;"	m	struct:Order
scaleInitLevelSize	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      scaleInitLevelSize;$/;"	m	struct:Order
scaleInitPosition	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      scaleInitPosition;$/;"	m	struct:Order
scalePriceAdjustInterval	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      scalePriceAdjustInterval;$/;"	m	struct:Order
scalePriceAdjustValue	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   scalePriceAdjustValue;$/;"	m	struct:Order
scalePriceIncrement	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   scalePriceIncrement;$/;"	m	struct:Order
scaleProfitOffset	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   scaleProfitOffset;$/;"	m	struct:Order
scaleRandomPercent	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     scaleRandomPercent;$/;"	m	struct:Order
scaleSubsLevelSize	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      scaleSubsLevelSize;$/;"	m	struct:Order
scaleTable	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString scaleTable;$/;"	m	struct:Order
scanCode	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    IBString scanCode;$/;"	m	struct:ScannerSubscription
scannerData	clients/ibroke/QInteractiveBrokers/src/IBClient.h	/^    void scannerData(int reqId, int rank, const ContractDetails &contractDetails, const IBString &distance, const IBString &benchmark, const IBString &projection, const IBString &legsStr) {};$/;"	f	class:IBClient
scannerDataEnd	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::scannerDataEnd(int reqId)$/;"	f	class:IBClient
scannerParameters	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::scannerParameters(const IBString &xml)$/;"	f	class:IBClient
scannerSettingPairs	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^	IBString scannerSettingPairs;$/;"	m	struct:ScannerSubscription
scanner_def	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	5;"	d
secId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	secId;$/;"	m	struct:Contract
secIdList	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	TagValueListSPtr secIdList;$/;"	m	struct:ContractDetails
secIdType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	secIdType;		\/\/ CUSIP;SEDOL;ISIN;RIC$/;"	m	struct:Contract
secType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	secType;$/;"	m	struct:Contract
select	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^import select$/;"	i
select	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^import select$/;"	i
select_figure_formats	notebooks/q/kxpy/kx_backend_inline.py	/^from IPython.core.pylabtools import select_figure_formats$/;"	i
send	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^int EPosixClientSocket::send(const char* buf, size_t sz)$/;"	f	class:EPosixClientSocket
send	notebooks/q/kxpy/kx_comm.py	/^    def send(self, data=None, metadata=None, buffers=None):$/;"	m	class:Comm
sendBufferedData	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^int EClientSocketBase::sendBufferedData()$/;"	f	class:EClientSocketBase
send_many	test/kafka/producer.py	/^async def send_many():$/;"	f
sensor	clients/betfair/__init__.py	/^    sensor=SensorSpec($/;"	v
serverVersion	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^int IBClient::serverVersion()$/;"	f	class:IBClient
serverVersion	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K serverVersion(K ignore)$/;"	f
serverVersion	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^int EClientSocketBase::serverVersion()$/;"	f	class:EClientSocketBase
setAtom	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^template<> V setAtom(IBString *property, K x, G type, std::string &error)$/;"	f
setAtom	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^template<> V setAtom(bool *property, K x, G type, std::string &error)$/;"	f
setAtom	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^template<> V setAtom(double *property, K x, G type, std::string &error)$/;"	f
setAtom	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^template<> V setAtom(int *property, K x, G type, std::string &error)$/;"	f
setAtom	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^template<> V setAtom(long *property, K x, G type, std::string &error)$/;"	f
setAtom	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^template<typename T> V setAtom(T *property, K x, G type, std::string &error)$/;"	f
setClientId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::setClientId( int clientId)$/;"	f	class:EClientSocketBase
setExtraAuth	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::setExtraAuth( bool extraAuth)$/;"	f	class:EClientSocketBase
setList	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^V setList(T &property, I type, K x, I index, std::string &error)$/;"	f
setProperties	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^V setProperties(K dict, std::map<std::string, std::function<V(K x, I i, std::string &err)>> &props, std::string &error)$/;"	f
setProperty	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^V setProperty(T &property, I expectedType, K x, I index, std::string &error)$/;"	f
setServerLogLevel	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::setServerLogLevel(int level)$/;"	f	class:IBClient
setServerLogLevel	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K setServerLogLevel(K level)$/;"	f
setServerLogLevel	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::setServerLogLevel(int logLevel)$/;"	f	class:EClientSocketBase
settlingFirm	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString settlingFirm;$/;"	m	struct:Order
shared_ptr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   explicit shared_ptr(X* ptr = 0) : ptr_(ptr) {}$/;"	f	class:shared_ptr
shared_ptr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   shared_ptr(const shared_ptr<Y>& other)$/;"	f	class:shared_ptr
shared_ptr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^template<typename X> class shared_ptr {$/;"	c
shared_ptr_defs	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^namespace shared_ptr_defs {$/;"	n
shared_ptr_h_INCLUDED	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	5;"	d
shares	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	int			shares;$/;"	m	struct:Execution
shell	notebooks/q/kxpy/kx_backend_inline.py	/^shell=qshell(df)$/;"	v
shortSaleSlot	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	long		shortSaleSlot; \/\/ 1 = clearing broker, 2 = third party$/;"	m	struct:ComboLeg
shortSaleSlot	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      shortSaleSlot; \/\/ 1 if you hold the shares, 2 if they will be delivered from elsewhere.  Only for Action="SSHORT$/;"	m	struct:Order
show	notebooks/q/kxpy/kx_backend_inline.py	/^def show(close=None, block=None):$/;"	f
side	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	side;$/;"	m	struct:Execution
smartComboRoutingParams	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	TagValueListSPtr smartComboRoutingParams;$/;"	m	struct:Order
snprintf	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/StdAfx.h	11;"	d
socket	clients/ibroke/QInteractiveBrokers/src/IBClient.h	/^    std::unique_ptr<EPosixClientSocket> socket;$/;"	m	class:IBClient
socket	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^import socket$/;"	i
socket	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^import socket$/;"	i
spRatingAbove	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    IBString spRatingAbove;$/;"	m	struct:ScannerSubscription
spRatingBelow	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^    IBString spRatingBelow;$/;"	m	struct:ScannerSubscription
startApi	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::startApi()$/;"	f	class:EClientSocketBase
startingPrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   startingPrice;$/;"	m	struct:Order
status	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	/^	IBString status;$/;"	m	struct:OrderState
stockRangeLower	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   stockRangeLower;$/;"	m	struct:Order
stockRangeUpper	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   stockRangeUpper;$/;"	m	struct:Order
stockRefPrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   stockRefPrice;$/;"	m	struct:Order
stockTypeFilter	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/ScannerSubscription.h	/^	IBString stockTypeFilter;$/;"	m	struct:ScannerSubscription
storage	__main__.py	/^from pulumi_gcp import storage$/;"	i
strike	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	double		strike;$/;"	m	struct:Contract
stringFormat	clients/ibroke/QInteractiveBrokers/src/helpers.h	/^std::string stringFormat(const std::string& format, Args ... args )$/;"	f
subcategory	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	subcategory;$/;"	m	struct:ContractDetails
subprocess	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^import subprocess$/;"	i
subprocess	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^import subprocess$/;"	i
subscribeToGroupEvents	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::subscribeToGroupEvents(int reqId, int groupId)$/;"	f	class:IBClient
subscribeToGroupEvents	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K subscribeToGroupEvents(K reqId, K groupId)$/;"	f
subscribeToGroupEvents	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::subscribeToGroupEvents( int reqId, int groupId)$/;"	f	class:EClientSocketBase
summary	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	Contract	summary;$/;"	m	struct:ContractDetails
sweepToFill	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     sweepToFill;$/;"	m	struct:Order
symbol	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	symbol;$/;"	m	struct:Contract
sys	clients/iqfeed/docker-iqfeed/is_iqfeed_running.py	/^import sys$/;"	i
sys	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^import sys$/;"	i
sys	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^import sys$/;"	i
t	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	struct:k0
t	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	struct:k0
tag	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TagValue.h	/^	IBString tag;$/;"	m	struct:TagValue
tagvalue_def	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TagValue.h	5;"	d
target_name	notebooks/q/kxpy/kx_comm.py	/^    target_name = Unicode('comm')$/;"	v	class:Comm
testVersion	get_helm.sh	/^testVersion() {$/;"	f
tickEFP	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::tickEFP(TickerId tickerId, TickType tickType, double basisPoints, const IBString &formattedBasisPoints, double totalDividends, int holdDays, const IBString &futureExpiry, double dividendImpact, double dividendsToExpiry)$/;"	f	class:IBClient
tickGeneric	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::tickGeneric(TickerId tickerId, TickType tickType, double value)$/;"	f	class:IBClient
tickOptionComputation	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::tickOptionComputation(TickerId tickerId, TickType tickType, double impliedVol, double delta, double optPrice, double pvDividend, double gamma, double vega, double theta, double undPrice)$/;"	f	class:IBClient
tickPrice	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::tickPrice(TickerId tickerId, TickType field, double price, int canAutoExecute)$/;"	f	class:IBClient
tickSize	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::tickSize(TickerId tickerId, TickType field, int size)$/;"	f	class:IBClient
tickSnapshotEnd	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::tickSnapshotEnd(int reqId)$/;"	f	class:IBClient
tickString	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::tickString(TickerId tickerId, TickType tickType, const IBString &value)$/;"	f	class:IBClient
tif	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	IBString tif;           \/\/ "Time in Force" - DAY, GTC, etc.$/;"	m	struct:Order
time	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Execution.h	/^	IBString	time;$/;"	m	struct:Execution
time	clients/iqfeed/docker-iqfeed/is_iqfeed_running.py	/^import time$/;"	i
time	clients/iqfeed/docker-iqfeed/launch_iqfeed.py	/^import time$/;"	i
time	clients/iqfeed/docker-iqfeed/pyiqfeed_admin_conn.py	/^import time$/;"	i
timeZoneId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	timeZoneId;$/;"	m	struct:ContractDetails
topic	notebooks/q/kxpy/kx_comm.py	/^    topic = Bytes()$/;"	v	class:Comm
totalQuantity	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	long     totalQuantity;$/;"	m	struct:Order
traceback	notebooks/q/kxpy/kx_backend_inline.py	/^ import traceback$/;"	i
tradingClass	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	tradingClass;$/;"	m	struct:Contract
tradingHours	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	tradingHours;$/;"	m	struct:ContractDetails
trailStopPrice	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   trailStopPrice; \/\/ TRAILLIMIT orders only$/;"	m	struct:Order
trailingPercent	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   trailingPercent;$/;"	m	struct:Order
transmit	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     transmit;      \/\/ if false, order will be created but not transmited$/;"	m	struct:Order
triggerMethod	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      triggerMethod; \/\/ 0=Default, 1=Double_Bid_Ask, 2=Last, 3=Double_Last, 4=Bid_Ask, 7=Last_or_Bid_Ask, 8=Mid-point$/;"	m	struct:Order
tswsocketclienterrors_def	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TwsSocketClientErrors.h	5;"	d
typeError	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^template<typename T> std::string typeError(T *property, G expectedType)$/;"	f
u	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{I r;H t,u;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{I n;G G0[1];};};}*K;$/;"	m	struct:k0
u	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	/^typedef struct k0{signed char m,a,t;C u;I r;union{G g;H h;I i;J j;E e;F f;S s;struct k0*k;struct{J n;G G0[1];};};}*K;$/;"	m	struct:k0
underComp	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	UnderComp* underComp;$/;"	m	struct:Contract
underConId	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	int			underConId;$/;"	m	struct:ContractDetails
unsubscribeFromGroupEvents	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::unsubscribeFromGroupEvents(int reqId)$/;"	f	class:IBClient
unsubscribeFromGroupEvents	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K unsubscribeFromGroupEvents(K reqId)$/;"	f
unsubscribeFromGroupEvents	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::unsubscribeFromGroupEvents( int reqId)$/;"	f	class:EClientSocketBase
up	clients/ibroke/QInteractiveBrokers/src/helpers.h	/^inline I up(J f) { return (f \/ 8.64e13 + 10957) * 8.64e4; } \/\/ unix from kdb+ timestamp$/;"	f
updateAccountTime	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::updateAccountTime(const IBString &timeStamp)$/;"	f	class:IBClient
updateAccountValue	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::updateAccountValue(const IBString &key, const IBString &val, const IBString &currency, const IBString &accountName)$/;"	f	class:IBClient
updateDisplayGroup	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::updateDisplayGroup(int reqId, const IBString& contractInfo)$/;"	f	class:IBClient
updateDisplayGroup	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K updateDisplayGroup(K reqId, K contractInfo)$/;"	f
updateDisplayGroup	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::updateDisplayGroup( int reqId, const IBString& contractInfo)$/;"	f	class:EClientSocketBase
updateMktDepth	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::updateMktDepth(TickerId id, int position, int operation, int side, double price, int size)$/;"	f	class:IBClient
updateMktDepthL2	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::updateMktDepthL2(TickerId id, int position, IBString marketMaker, int operation, int side, double price, int size)$/;"	f	class:IBClient
updateNewsBulletin	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::updateNewsBulletin(int msgId, int msgType, const IBString &newsMessage, const IBString &originExch)$/;"	f	class:IBClient
updatePortfolio	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::updatePortfolio(const Contract &contract, int position, double marketPrice, double marketValue, double averageCost, double unrealizedPNL, double realizedPNL, const IBString &accountName)$/;"	f	class:IBClient
use_	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   Use use_;$/;"	m	class:shared_ptr
uuid	infra/monitoring/cluster.py	/^import uuid$/;"	i
uuid	infra/monitoring/operator.py	/^import uuid$/;"	i
uuid	infra/monitoring/thanos.py	/^import uuid$/;"	i
uuid	notebooks/q/kxpy/kx_comm.py	/^import uuid$/;"	i
uz	clients/ibroke/QInteractiveBrokers/src/helpers.h	/^inline I uz(F f) { return 86400 * (f + 10957); } \/\/ unix from kdb+ datetime$/;"	f
validExchanges	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Contract.h	/^	IBString	validExchanges;$/;"	m	struct:ContractDetails
value	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/TagValue.h	/^	IBString value;$/;"	m	struct:TagValue
verifyChecksum	get_helm.sh	/^verifyChecksum() {$/;"	f
verifyCompleted	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::verifyCompleted(bool isSuccessful, const IBString &errorText)$/;"	f	class:IBClient
verifyFile	get_helm.sh	/^verifyFile() {$/;"	f
verifyMessage	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::verifyMessage(const IBString& apiData)$/;"	f	class:IBClient
verifyMessage	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K verifyMessage(K apiData)$/;"	f
verifyMessage	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::verifyMessage(const IBString& apiData)$/;"	f	class:EClientSocketBase
verifyMessageAPI	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::verifyMessageAPI(const IBString &apiData)$/;"	f	class:IBClient
verifyRequest	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::verifyRequest(const IBString& apiName, const IBString& apiVersion)$/;"	f	class:IBClient
verifyRequest	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K verifyRequest(K apiName, K apiVersion)$/;"	f
verifyRequest	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^void EClientSocketBase::verifyRequest(const IBString& apiName, const IBString& apiVersion)$/;"	f	class:EClientSocketBase
verifySignatures	get_helm.sh	/^verifySignatures() {$/;"	f
verifySupported	get_helm.sh	/^verifySupported() {$/;"	f
version	clients/ibroke/QInteractiveBrokers/src/qib.cpp	/^K version(K ignore)$/;"	f
volatility	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	double   volatility;$/;"	m	struct:Order
volatilityType	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	int      volatilityType;     \/\/ 1=daily, 2=annual$/;"	m	struct:Order
volume	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^	int volume;$/;"	m	struct:__anon1::BarData
warningText	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/OrderState.h	/^	IBString warningText;$/;"	m	struct:OrderState
wf	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	84;"	d
wf	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	90;"	d
wh	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	77;"	d
whatIf	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/Order.h	/^	bool     whatIf;$/;"	m	struct:Order
wi	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	79;"	d
widget	notebooks/q/kxpy/kx_backend_inline.py	/^  from ipywidgets.widgets import widget$/;"	i
winError	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^void IBClient::winError(const IBString &str, int lastError)$/;"	f	class:IBClient
wine_log_filename	clients/iqfeed/docker-iqfeed/is_iqfeed_running.py	/^wine_log_filename = '\/root\/DTN\/IQFeed\/wine.log'$/;"	v
wj	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	81;"	d
xB	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	140;"	d
xC	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	139;"	d
xE	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	135;"	d
xF	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	136;"	d
xG	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	131;"	d
xH	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	132;"	d
xI	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	133;"	d
xJ	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	134;"	d
xK	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	138;"	d
xS	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	137;"	d
xU	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	14;"	d
xe	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	127;"	d
xf	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	128;"	d
xg	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	123;"	d
xh	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	124;"	d
xi	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	125;"	d
xj	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	126;"	d
xk	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	130;"	d
xn	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	120;"	d
xr	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	117;"	d
xs	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	129;"	d
xt	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	118;"	d
xu	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	119;"	d
xx	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	121;"	d
xy	clients/ibroke/QInteractiveBrokers/third_party/kx/k.h	122;"	d
yaml	infra/monitoring/operator.py	/^import yaml$/;"	i
yaml	infra/monitoring/thanos.py	/^import yaml$/;"	i
yield	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommissionReport.h	/^	double		yield;$/;"	m	struct:CommissionReport
yieldRedemptionDate	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/CommissionReport.h	/^	int			yieldRedemptionDate; \/\/ YYYYMMDD format$/;"	m	struct:CommissionReport
zu	clients/ibroke/QInteractiveBrokers/src/helpers.h	/^inline F zu(I u) { return u \/ 8.64e4 - 10957; }  \/\/ kdb+ datetime from unix$/;"	f
~CHScrollListBox	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/HScrollListBox.cpp	/^CHScrollListBox::~CHScrollListBox()$/;"	f	class:CHScrollListBox
~EClient	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClient.h	/^   virtual ~EClient() {}$/;"	f	class:EClient
~EClientSocketBase	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EClientSocketBaseImpl.h	/^EClientSocketBase::~EClientSocketBase()$/;"	f	class:EClientSocketBase
~EPosixClientSocket	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/src/EPosixClientSocket.cpp	/^EPosixClientSocket::~EPosixClientSocket()$/;"	f	class:EPosixClientSocket
~EWrapper	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/EWrapper.h	/^   virtual ~EWrapper() {};$/;"	f	class:EWrapper
~IBClient	clients/ibroke/QInteractiveBrokers/src/IBClient.cpp	/^IBClient::~IBClient()$/;"	f	class:IBClient
~Use	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   ~Use() { remove(); }$/;"	f	class:shared_ptr_defs::Use
~shared_ptr	clients/ibroke/QInteractiveBrokers/third_party/ib/IBJts/source/PosixClient/Shared/shared_ptr.h	/^   ~shared_ptr() { if (use_.only()) delete ptr_; }$/;"	f	class:shared_ptr
